<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="372px" preserveAspectRatio="none" style="width:599px;height:372px;" version="1.1" viewBox="0 0 599 372" width="599px" zoomAndPan="magnify"><defs><linearGradient id="g1xuykn9rnwu3i0" x1="0%" x2="100%" y1="50%" y2="50%"><stop offset="0%" stop-color="#FFFFFF"/><stop offset="100%" stop-color="#FFFFFF"/></linearGradient><filter height="300%" id="f1xuykn9rnwu3i" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter><filter height="1" id="b1xuykn9rnwu3i0" width="1" x="0" y="0"><feFlood flood-color="#87CEEB" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><rect fill="url(#g1xuykn9rnwu3i0)" height="372" style="stroke: none; stroke-width: 1.0;" width="599" x="0" y="0"/><text fill="#000000" font-family="sans-serif" font-size="18" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="248" x="94.5" y="26.708">Nuspell - segmentation -</text><text fill="#000000" font-family="monospace" font-size="18" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="154" x="348.5" y="26.708">code_points(s)</text><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="0" x="301.5" y="47.6611"/><path d="M10,51.9063 L10,273.7656 L460,273.7656 L460,61.9063 L450,51.9063 L10,51.9063 " fill="#FFFFFF" filter="url(#f1xuykn9rnwu3i)" style="stroke: #000000; stroke-width: 1.0;"/><path d="M450,51.9063 L450,61.9063 L460,61.9063 L450,51.9063 " fill="#FFFFFF" style="stroke: #000000; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="367" x="16" y="68.9731">Iterate every Unicode code points of the Unicode string s.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="20" y="84.106"/><text fill="#000000" font-family="monospace" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="8" x="16" y="99.2388">s</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="161" x="28" y="99.2388">must be a Unicode string</text><text fill="#000000" font-family="monospace" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="40" x="16" y="114.3716">index</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="215" x="60" y="114.3716">is optional integer with start index</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="20" y="129.5044"/><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="256" x="16" y="144.6372">assert({"h", "e", "l", "l", "o"}</text><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="200" x="16" y="159.77">== code_points("hello"));</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="20" y="174.9028"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="425" x="16" y="190.0356">The number of iteration may differ from the size(s), because some</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="417" x="16" y="205.1685">code points may be represented as a couple of other code points</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="279" x="16" y="220.3013">("surrogate pair") on a narrow-build system.</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="20" y="235.4341"/><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="384" x="16" y="250.5669">assert({"a", "b", "c", "\\U00020b9f", "\\u3042"}</text><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="328" x="16" y="265.6997">== code_points("abc\\U00020b9f\\u3042"));</text><ellipse cx="490" cy="162.8359" fill="#000000" filter="url(#f1xuykn9rnwu3i)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FFFFFF" filter="url(#f1xuykn9rnwu3i)" height="33.9688" rx="12.5" ry="12.5" style="stroke: #000000; stroke-width: 1.5;" width="196" x="392" y="287.1997"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="402" y="308.3384">return</text><text fill="#000000" filter="url(#b1xuykn9rnwu3i0)" font-family="monospace" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="445" y="308.3384">code_points_impl(s)</text><ellipse cx="490" cy="351.1685" fill="none" filter="url(#f1xuykn9rnwu3i)" rx="10" ry="10" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="490.5" cy="351.6685" fill="#000000" filter="url(#f1xuykn9rnwu3i)" rx="6" ry="6" style="stroke: none; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="490" x2="490" y1="172.8359" y2="287.1997"/><polygon fill="#000000" points="486,277.1997,490,287.1997,494,277.1997,490,281.1997" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="490" x2="490" y1="321.1685" y2="341.1685"/><polygon fill="#000000" points="486,331.1685,490,341.1685,494,331.1685,490,335.1685" style="stroke: #000000; stroke-width: 1.0;"/><!--
@startuml
skinparam BackgroundColor White|White
skinparam ArrowColor Black

skinparam NoteBackgroundColor White
skinparam NoteBorderColor Black

skinparam ActivityBackgroundColor White
skinparam ActivityDiamondBackgroundColor White
skinparam ActivityBorderColor Black
skinparam ActivityDiamondBorderColor Black

title **Nuspell - segmentation - //""code_points(s)""//**\n

start

floating note left
    Iterate every Unicode code points of the Unicode string s.

    **""s""** must be a Unicode string
    **""index""** is optional integer with start index
    
    ""assert({"h", "e", "l", "l", "o"}""
    ""== code_points("hello"));""
    
    The number of iteration may differ from the size(s), because some 
    code points may be represented as a couple of other code points 
    ("surrogate pair") on a narrow-build system.
    
    ""assert({"a", "b", "c", "\\U00020b9f", "\\u3042"}""
    ""== code_points("abc\\U00020b9f\\u3042"));""
end note

:return <back:skyblue>//""code_points_impl(s)""//</back>;

stop

@enduml

PlantUML version 1.2018.06(Mon May 21 12:34:53 CEST 2018)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 10.0.2+13-Ubuntu-1ubuntu0.18.04.1
Operating System: Linux
OS Version: 4.15.0-33-generic
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>