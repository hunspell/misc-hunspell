<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="364px" preserveAspectRatio="none" style="width:549px;height:364px;" version="1.1" viewBox="0 0 549 364" width="549px" zoomAndPan="magnify"><defs><linearGradient id="g1i2bezdyeo4ft0" x1="0%" x2="100%" y1="50%" y2="50%"><stop offset="0%" stop-color="#FFFFFF"/><stop offset="100%" stop-color="#FFFFFF"/></linearGradient><filter height="300%" id="f1i2bezdyeo4ft" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter><filter height="1" id="b1i2bezdyeo4ft0" width="1" x="0" y="0"><feFlood flood-color="#87CEEB" result="flood"/><feComposite in="SourceGraphic" in2="flood" operator="over"/></filter></defs><g><rect fill="url(#g1i2bezdyeo4ft0)" height="364" style="stroke: none; stroke-width: 1.0;" width="549" x="0" y="0"/><text fill="#000000" font-family="Roboto Condensed" font-size="18" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="191" x="99" y="26.6992">Nuspell - segmentation -</text><text fill="#000000" font-family="monospace" font-size="18" font-style="italic" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="154" x="294" y="26.8486">code_points(s)</text><text fill="#000000" font-family="Roboto Condensed" font-size="18" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="0" x="275.5" y="47.793"/><path d="M10,52.1875 L10,259.8281 L415,259.8281 L415,62.1875 L405,52.1875 L10,52.1875 " fill="#FFFFFF" filter="url(#f1i2bezdyeo4ft)" style="stroke: #000000; stroke-width: 1.0;"/><path d="M405,52.1875 L405,62.1875 L415,62.1875 L405,52.1875 " fill="#FFFFFF" style="stroke: #000000; stroke-width: 1.0;"/><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="315" x="16" y="69.248">Iterate every Unicode code points of the Unicode string s.</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="19" y="84.4824"/><text fill="#000000" font-family="monospace" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="8" x="16" y="99.8247">s</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="138" x="27" y="99.7168">must be a Unicode string</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="19" y="114.9512"/><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="256" x="16" y="130.1919">assert({"h", "e", "l", "l", "o"}</text><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="200" x="16" y="145.3247">== code_points("hello"));</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="19" y="160.4512"/><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="366" x="16" y="175.6855">The number of iteration may differ from the size(s), because some</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="359" x="16" y="190.9199">code points may be represented as a couple of other code points</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="16" y="206.1543">("surrogate pair") on a narrow-build system.</text><text fill="#000000" font-family="Roboto Condensed" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="0" x="19" y="221.3887"/><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="384" x="16" y="236.6294">assert({"a", "b", "c", "\\U00020b9f", "\\u3042"}</text><text fill="#000000" font-family="monospace" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="328" x="16" y="251.7622">== code_points("abc\\U00020b9f\\u3042"));</text><ellipse cx="445" cy="156.0078" fill="#000000" filter="url(#f1i2bezdyeo4ft)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FFFFFF" filter="url(#f1i2bezdyeo4ft)" height="34.0625" rx="12.5" ry="12.5" style="stroke: #000000; stroke-width: 1.5;" width="186" x="352" y="279.8281"/><text fill="#000000" font-family="Roboto Condensed" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="362" y="300.9609">return</text><text fill="#000000" filter="url(#b1i2bezdyeo4ft0)" font-family="monospace" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="395" y="301.0605">code_points_impl(s)</text><ellipse cx="445" cy="343.8906" fill="none" filter="url(#f1i2bezdyeo4ft)" rx="10" ry="10" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="445.5" cy="344.3906" fill="#000000" filter="url(#f1i2bezdyeo4ft)" rx="6" ry="6" style="stroke: none; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="445" x2="445" y1="166.0078" y2="279.8281"/><polygon fill="#000000" points="441,269.8281,445,279.8281,449,269.8281,445,273.8281" style="stroke: #000000; stroke-width: 1.0;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="445" x2="445" y1="313.8906" y2="333.8906"/><polygon fill="#000000" points="441,323.8906,445,333.8906,449,323.8906,445,327.8906" style="stroke: #000000; stroke-width: 1.0;"/><!--
@startuml
skinparam BackgroundColor White|White
skinparam ArrowColor Black
skinparam DefaultFontName Roboto Condensed
skinparam TitleFontStyle Bold

skinparam NoteBackgroundColor White
skinparam NoteBorderColor Black

skinparam UsecaseBackgroundColor White
skinparam ActorBackgroundColor White
skinparam UsecaseBorderColor Black
skinparam ActorBorderColor Black

skinparam usecase {
	BackgroundColor<<for now out of scope>> Gray
}

skinparam StateBackgroundColor White
skinparam StateBorderColor Black

skinparam ActivityBackgroundColor White
skinparam ActivityDiamondBackgroundColor White
skinparam ActivityBorderColor Black
skinparam ActivityDiamondBorderColor Black

skinparam ClassBackgroundColor White
skinparam ClassBorderColor Black
hide empty members

title Nuspell - segmentation - //""code_points(s)""//\n

start

floating note left
    Iterate every Unicode code points of the Unicode string s.

    **""s""** must be a Unicode string
    
    ""assert({"h", "e", "l", "l", "o"}""
    ""== code_points("hello"));""
    
    The number of iteration may differ from the size(s), because some 
    code points may be represented as a couple of other code points 
    ("surrogate pair") on a narrow-build system.
    
    ""assert({"a", "b", "c", "\\U00020b9f", "\\u3042"}""
    ""== code_points("abc\\U00020b9f\\u3042"));""
end note

:return <back:skyblue>//""code_points_impl(s)""//</back>;

stop

@enduml

PlantUML version 1.2018.12beta1(Unknown compile time)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 10.0.2+13-Ubuntu-1ubuntu0.18.04.2
Operating System: Linux
OS Version: 4.15.0-34-generic
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>