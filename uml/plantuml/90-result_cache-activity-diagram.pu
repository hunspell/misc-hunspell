@startuml
!include skin.iuml

title Nuspell - Result Cache

start

:initialize cache for entry type and maximum entries;
note right
Use each cache for only on type of entries,
do not mix spell/suggest usage.
end note

while (application is running?) is (yes)

:external request is received for spell/suggest for a word (the key);
partition "**get the value for this key from the cache**" {
	if (cache has key?) then (yes)
		:get value for key;
		:increment count for key;
		:set timestamp for key to now;
	else (no)
		:return empty result;
	endif
}
if (a non-empty value got returned?) then (yes)
	:return that value to
the external request;
else (no)
	:get the value from spell/suggest method for this key;
	fork
		:return that value to
the external request;
	fork again
		partition "**add the value for this key to the cache**" {
			if (cache is at maximum?) then (yes)
				:get X cache entries with lowest count,
oldest timestamp and sorted on key;
				note right
Sorting key is for
constant behaviour.
				end note
				:delete these entries;
			else (no)
			endif
			:add value for key;
			:set count for key to 1;
			:set timestamp for key to now;
		}
	end fork
endif

endwhile(no)

stop

@enduml

TODO
what is X
:initialize cache for entry type, maximum entries and timeout;

