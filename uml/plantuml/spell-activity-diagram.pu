@startuml
skinparam backgroundcolor White|White

title Hunspell - Check Spelling - bool spell(word, info, root)

start
floating note: Return FALSE is implied.


partition "initialzation" {
	:reset I/O parameter info;
	if (word length exceeds maximum?) then (yes)
		stop
	else (no)
	endif
}

partition "input conversion" {
	if (input conversion available?) then (yes)
		:perform input conversion on word;
	else (no)
	endif
	if (input conversion changed word?) then (yes)
		:clean converted word and store:\n- cleaned word length\n- cleaned word\n- capitalization type\n- abbr. count;
	else (no)
		:clean (original) word and store:\n- cleaned word length\n- cleaned word\n- capitalization type\n- abbreviation count;
	endif

	if (client is Mozilla) then (yes)
		:set abbreviation count to 1;
	else (no)
	endif

	if (cleaned word length is 0 or hash manager is empty?) then (yes)
		:return TRUE;
		stop
	else (no)
	endif
	:reset root;
}

partition "numbers and numeric separators" {
	:determine number state for cleaned word;
	if (cleaned word is a number?) then (yes)
		:return TRUE;
		stop
	else (no)
	endif
}

partition "capitalization type" {
	:TODO;
}

partition "check word" {
	:set root value to result of check_word\naccording depending on cleaned word case;
	note left: see other activity diagrams
}

partition "forbidden words" {
	:TODO deal with forbidden words;
}

partition "spell" {
	:return result recursive call to this spell algorithm depending on break patterns;
	note left: see other activity diagram
}

partition "default" {
	:return FALSE;
}

stop

@enduml
