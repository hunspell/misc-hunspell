<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:officeooo="http://openoffice.org/2009/office" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.text">
 <office:meta><meta:creation-date>2018-02-06T13:49:34.328655039</meta:creation-date><meta:generator>LibreOffice/5.4.2.2$Linux_X86_64 LibreOffice_project/40m0$Build-2</meta:generator><dc:date>2018-02-06T14:27:04.797187931</dc:date><meta:editing-duration>PT16M5S</meta:editing-duration><meta:editing-cycles>3</meta:editing-cycles><meta:document-statistic meta:table-count="0" meta:image-count="0" meta:object-count="0" meta:page-count="80" meta:paragraph-count="4429" meta:word-count="16651" meta:character-count="147808" meta:non-whitespace-character-count="99342"/></office:meta>
 <office:settings>
  <config:config-item-set config:name="ooo:view-settings">
   <config:config-item config:name="ViewAreaTop" config:type="long">2167950</config:config-item>
   <config:config-item config:name="ViewAreaLeft" config:type="long">0</config:config-item>
   <config:config-item config:name="ViewAreaWidth" config:type="long">23656</config:config-item>
   <config:config-item config:name="ViewAreaHeight" config:type="long">22677</config:config-item>
   <config:config-item config:name="ShowRedlineChanges" config:type="boolean">true</config:config-item>
   <config:config-item config:name="InBrowseMode" config:type="boolean">false</config:config-item>
   <config:config-item-map-indexed config:name="Views">
    <config:config-item-map-entry>
     <config:config-item config:name="ViewId" config:type="string">view2</config:config-item>
     <config:config-item config:name="ViewLeft" config:type="long">10968</config:config-item>
     <config:config-item config:name="ViewTop" config:type="long">2182195</config:config-item>
     <config:config-item config:name="VisibleLeft" config:type="long">0</config:config-item>
     <config:config-item config:name="VisibleTop" config:type="long">2167950</config:config-item>
     <config:config-item config:name="VisibleRight" config:type="long">23654</config:config-item>
     <config:config-item config:name="VisibleBottom" config:type="long">2190625</config:config-item>
     <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
     <config:config-item config:name="ViewLayoutColumns" config:type="short">1</config:config-item>
     <config:config-item config:name="ViewLayoutBookMode" config:type="boolean">false</config:config-item>
     <config:config-item config:name="ZoomFactor" config:type="short">100</config:config-item>
     <config:config-item config:name="IsSelectedFrame" config:type="boolean">false</config:config-item>
     <config:config-item config:name="AnchoredTextOverflowLegacy" config:type="boolean">false</config:config-item>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
  </config:config-item-set>
  <config:config-item-set config:name="ooo:configuration-settings">
   <config:config-item config:name="PrintPaperFromSetup" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintFaxName" config:type="string"/>
   <config:config-item config:name="PrintSingleJobs" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintProspectRTL" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintProspect" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintReversed" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintTextPlaceholder" config:type="boolean">false</config:config-item>
   <config:config-item config:name="DoNotJustifyLinesWithManualBreak" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AlignTabStopPosition" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintLeftPages" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IgnoreFirstLineIndentInNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterSetup" config:type="base64Binary"/>
   <config:config-item config:name="CollapseEmptyCellPara" config:type="boolean">true</config:config-item>
   <config:config-item config:name="RedlineProtectionKey" config:type="base64Binary"/>
   <config:config-item config:name="UseOldPrinterMetrics" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UseOldNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AddExternalLeading" config:type="boolean">true</config:config-item>
   <config:config-item config:name="TreatSingleColumnBreakAsPageBreak" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UpdateFromTemplate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsLabelDocument" config:type="boolean">false</config:config-item>
   <config:config-item config:name="RsidRoot" config:type="int">1677365</config:config-item>
   <config:config-item config:name="ConsiderTextWrapOnObjPos" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TableRowKeep" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TabsRelativeToIndent" config:type="boolean">true</config:config-item>
   <config:config-item config:name="SaveVersionOnClose" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UseFormerTextWrapping" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ChartAutoUpdate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AddParaTableSpacingAtStart" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintTables" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AllowPrintJobCancel" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AddParaTableSpacing" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintDrawings" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AddParaSpacingToTableCells" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UseFormerLineSpacing" config:type="boolean">false</config:config-item>
   <config:config-item config:name="OutlineLevelYieldsNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LinkUpdateMode" config:type="short">1</config:config-item>
   <config:config-item config:name="DoNotResetParaAttrsForNumFont" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ApplyUserData" config:type="boolean">true</config:config-item>
   <config:config-item config:name="StylesNoDefault" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbeddedDatabaseName" config:type="string"/>
   <config:config-item config:name="FloattableNomargins" config:type="boolean">false</config:config-item>
   <config:config-item config:name="BackgroundParaOverDrawings" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintBlackFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterName" config:type="string"/>
   <config:config-item config:name="UseFormerObjectPositioning" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TabOverMargin" config:type="boolean">false</config:config-item>
   <config:config-item config:name="SaveGlobalDocumentLinks" config:type="boolean">false</config:config-item>
   <config:config-item config:name="CurrentDatabaseDataSource" config:type="string"/>
   <config:config-item config:name="IsKernAsianPunctuation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="CharacterCompressionType" config:type="short">0</config:config-item>
   <config:config-item config:name="SmallCapsPercentage66" config:type="boolean">false</config:config-item>
   <config:config-item config:name="CurrentDatabaseCommand" config:type="string"/>
   <config:config-item config:name="CurrentDatabaseCommandType" config:type="int">0</config:config-item>
   <config:config-item config:name="FieldAutoUpdate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IgnoreTabsAndBlanksForLineCalculation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LoadReadonly" config:type="boolean">false</config:config-item>
   <config:config-item config:name="DoNotCaptureDrawObjsOnPage" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ClipAsCharacterAnchoredWriterFlyFrames" config:type="boolean">false</config:config-item>
   <config:config-item config:name="SurroundTextWrapSmall" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UnxForceZeroExtLeading" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TabAtLeftIndentForParagraphsInList" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintRightPages" config:type="boolean">true</config:config-item>
   <config:config-item config:name="Rsid" config:type="int">1811866</config:config-item>
   <config:config-item config:name="MathBaselineAlignment" config:type="boolean">true</config:config-item>
   <config:config-item config:name="MsWordCompTrailingBlanks" config:type="boolean">false</config:config-item>
   <config:config-item config:name="InvertBorderSpacing" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterIndependentLayout" config:type="string">high-resolution</config:config-item>
   <config:config-item config:name="TabOverflow" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintGraphics" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PropLineSpacingShrinksFirstLine" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UnbreakableNumberings" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AddFrameOffsets" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ClippedPictures" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedSystemFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ApplyParagraphMarkFormatToNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="SubtractFlysAnchoredAtFlys" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AddVerticalFrameOffsets" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ProtectForm" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintEmptyPages" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintControls" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintHiddenText" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintAnnotationMode" config:type="short">0</config:config-item>
   <config:config-item config:name="PrintPageBackground" config:type="boolean">true</config:config-item>
  </config:config-item-set>
 </office:settings>
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink">
    <ooo:library-embedded ooo:name="Standard"/>
   </ooo:libraries>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Noto Sans Devanagari1" svg:font-family="&apos;Noto Sans Devanagari&apos;" style:font-family-generic="swiss"/>
  <style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Noto Sans CJK SC Regular" svg:font-family="&apos;Noto Sans CJK SC Regular&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Noto Sans Devanagari" svg:font-family="&apos;Noto Sans Devanagari&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:styles>
  <style:default-style style:family="graphic">
   <style:graphic-properties svg:stroke-color="#3465a4" draw:fill-color="#729fcf" fo:wrap-option="no-wrap" draw:shadow-offset-x="0.1181in" draw:shadow-offset-y="0.1181in" draw:start-line-spacing-horizontal="0.1114in" draw:start-line-spacing-vertical="0.1114in" draw:end-line-spacing-horizontal="0.1114in" draw:end-line-spacing-vertical="0.1114in" style:flow-with-text="false"/>
   <style:paragraph-properties style:text-autospace="ideograph-alpha" style:line-break="strict" style:font-independent-line-spacing="false">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties style:use-window-font-color="true" style:font-name="Times New Roman" fo:font-size="12pt" fo:language="zxx" fo:country="none" style:letter-kerning="true" style:font-name-asian="Noto Sans CJK SC Regular" style:font-size-asian="10.5pt" style:language-asian="zxx" style:country-asian="none" style:font-name-complex="Noto Sans Devanagari" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none"/>
  </style:default-style>
  <style:default-style style:family="paragraph">
   <style:paragraph-properties fo:orphans="2" fo:widows="2" fo:hyphenation-ladder-count="no-limit" style:text-autospace="ideograph-alpha" style:punctuation-wrap="hanging" style:line-break="strict" style:tab-stop-distance="0.4925in" style:writing-mode="page"/>
   <style:text-properties style:use-window-font-color="true" style:font-name="Times New Roman" fo:font-size="12pt" fo:language="zxx" fo:country="none" style:letter-kerning="true" style:font-name-asian="Noto Sans CJK SC Regular" style:font-size-asian="10.5pt" style:language-asian="zxx" style:country-asian="none" style:font-name-complex="Noto Sans Devanagari" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none" fo:hyphenate="false" fo:hyphenation-remain-char-count="2" fo:hyphenation-push-char-count="2"/>
  </style:default-style>
  <style:default-style style:family="table">
   <style:table-properties table:border-model="collapsing"/>
  </style:default-style>
  <style:default-style style:family="table-row">
   <style:table-row-properties fo:keep-together="auto"/>
  </style:default-style>
  <style:style style:name="Standard" style:family="paragraph" style:class="text"/>
  <style:style style:name="Heading" style:family="paragraph" style:parent-style-name="Standard" style:next-style-name="Text_20_body" style:class="text">
   <style:paragraph-properties fo:margin-top="0.1665in" fo:margin-bottom="0.0835in" loext:contextual-spacing="false" fo:keep-with-next="always"/>
   <style:text-properties style:font-name="Arial" fo:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable" fo:font-size="14pt" style:font-name-asian="Noto Sans CJK SC Regular" style:font-family-asian="&apos;Noto Sans CJK SC Regular&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-size-asian="14pt" style:font-name-complex="Noto Sans Devanagari" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="system" style:font-pitch-complex="variable" style:font-size-complex="14pt"/>
  </style:style>
  <style:style style:name="Text_20_body" style:display-name="Text body" style:family="paragraph" style:parent-style-name="Standard" style:class="text">
   <style:paragraph-properties fo:margin-top="0in" fo:margin-bottom="0.0972in" loext:contextual-spacing="false" fo:line-height="120%"/>
  </style:style>
  <style:style style:name="List" style:family="paragraph" style:parent-style-name="Text_20_body" style:class="list">
   <style:text-properties style:font-size-asian="12pt" style:font-name-complex="Noto Sans Devanagari1" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="swiss"/>
  </style:style>
  <style:style style:name="Caption" style:family="paragraph" style:parent-style-name="Standard" style:class="extra">
   <style:paragraph-properties fo:margin-top="0.0835in" fo:margin-bottom="0.0835in" loext:contextual-spacing="false" text:number-lines="false" text:line-number="0"/>
   <style:text-properties fo:font-size="12pt" fo:font-style="italic" style:font-size-asian="12pt" style:font-style-asian="italic" style:font-name-complex="Noto Sans Devanagari1" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="swiss" style:font-size-complex="12pt" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="Index" style:family="paragraph" style:parent-style-name="Standard" style:class="index">
   <style:paragraph-properties text:number-lines="false" text:line-number="0"/>
   <style:text-properties style:font-size-asian="12pt" style:font-name-complex="Noto Sans Devanagari1" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="swiss"/>
  </style:style>
  <style:style style:name="Preformatted_20_Text" style:display-name="Preformatted Text" style:family="paragraph" style:parent-style-name="Standard" style:class="html">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties style:font-name="Courier New" fo:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed" fo:font-size="10pt" style:font-name-asian="Courier New" style:font-family-asian="&apos;Courier New&apos;" style:font-family-generic-asian="modern" style:font-pitch-asian="fixed" style:font-size-asian="10pt" style:font-name-complex="Courier New" style:font-family-complex="&apos;Courier New&apos;" style:font-family-generic-complex="modern" style:font-pitch-complex="fixed" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="Footer" style:family="paragraph" style:parent-style-name="Standard" style:class="extra">
   <style:paragraph-properties text:number-lines="false" text:line-number="0">
    <style:tab-stops>
     <style:tab-stop style:position="3.3465in" style:type="center"/>
     <style:tab-stop style:position="6.6929in" style:type="right"/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="Header" style:family="paragraph" style:parent-style-name="Standard" style:class="extra">
   <style:paragraph-properties text:number-lines="false" text:line-number="0">
    <style:tab-stops>
     <style:tab-stop style:position="3.3465in" style:type="center"/>
     <style:tab-stop style:position="6.6929in" style:type="right"/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="Line_20_numbering" style:display-name="Line numbering" style:family="text"/>
  <text:outline-style style:name="Outline">
   <text:outline-level-style text:level="1" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="2" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="3" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="4" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="5" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="6" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="7" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="8" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="9" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="10" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
  </text:outline-style>
  <text:notes-configuration text:note-class="footnote" style:num-format="1" text:start-value="0" text:footnotes-position="page" text:start-numbering-at="document"/>
  <text:notes-configuration text:note-class="endnote" style:num-format="i" text:start-value="0"/>
  <text:linenumbering-configuration text:style-name="Line_20_numbering" text:offset="0.1965in" style:num-format="1" text:number-position="left" text:increment="1"/>
 </office:styles>
 <office:automatic-styles>
  <style:style style:name="P1" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0.1965in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
  </style:style>
  <style:style style:name="P2" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0.1965in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties fo:color="#000080"/>
  </style:style>
  <style:style style:name="P3" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
  </style:style>
  <style:style style:name="P4" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties fo:color="#008000"/>
  </style:style>
  <style:style style:name="P5" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties fo:color="#000080"/>
  </style:style>
  <style:style style:name="P6" style:family="paragraph">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" fo:line-height="100%" fo:text-align="start" fo:text-indent="0in" style:text-autospace="ideograph-alpha" style:punctuation-wrap="simple" style:line-break="strict" style:writing-mode="lr-tb">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties fo:hyphenate="false"/>
  </style:style>
  <style:style style:name="P7" style:family="paragraph">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" fo:line-height="100%" fo:text-align="start" fo:text-indent="0in" style:text-autospace="ideograph-alpha" style:punctuation-wrap="simple" style:line-break="strict" style:writing-mode="lr-tb">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties fo:hyphenate="false"/>
  </style:style>
  <style:style style:name="T1" style:family="text">
   <style:text-properties fo:color="#008000"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties fo:color="#c0c0c0"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties fo:color="#000080"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties fo:color="#800080"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties fo:color="#00677c"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties fo:color="#00677c" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties fo:color="#808000"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties fo:color="#092e64"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties fo:color="#800000"/>
  </style:style>
  <style:style style:name="T10" style:family="text">
   <style:text-properties fo:font-variant="normal" fo:text-transform="none" style:use-window-font-color="true" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:text-position="0% 100%" style:font-name="Times New Roman" fo:font-size="10pt" fo:letter-spacing="normal" fo:language="zxx" fo:country="none" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:letter-kerning="true" fo:background-color="transparent" style:font-name-asian="Noto Sans CJK SC Regular" style:font-size-asian="10.5pt" style:language-asian="zxx" style:country-asian="none" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="Noto Sans Devanagari" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:text-scale="100%" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:style style:name="T11" style:family="text">
   <style:text-properties fo:font-variant="normal" fo:text-transform="none" fo:color="#000000" style:text-outline="false" style:text-line-through-style="none" style:text-line-through-type="none" style:text-position="0% 100%" style:font-name="Times New Roman" fo:font-size="10pt" fo:letter-spacing="normal" fo:language="zxx" fo:country="none" fo:font-style="normal" fo:text-shadow="none" style:text-underline-style="none" fo:font-weight="normal" style:text-underline-mode="continuous" style:text-overline-mode="continuous" style:text-line-through-mode="continuous" style:letter-kerning="true" fo:background-color="transparent" style:font-name-asian="Noto Sans CJK SC Regular" style:font-size-asian="10.5pt" style:language-asian="zxx" style:country-asian="none" style:font-style-asian="normal" style:font-weight-asian="normal" style:font-name-complex="Noto Sans Devanagari" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none" style:font-style-complex="normal" style:font-weight-complex="normal" style:text-emphasize="none" style:text-scale="100%" style:font-relief="none" style:text-overline-style="none" style:text-overline-color="font-color"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties fo:page-width="8.2681in" fo:page-height="11.6929in" style:num-format="1" style:print-orientation="portrait" fo:margin-top="0.7874in" fo:margin-bottom="0.7874in" fo:margin-left="0.7874in" fo:margin-right="0.7874in" style:writing-mode="lr-tb" style:footnote-max-height="0in">
    <style:footnote-sep style:width="0.0071in" style:distance-before-sep="0.0398in" style:distance-after-sep="0.0398in" style:line-style="solid" style:adjustment="left" style:rel-width="25%" style:color="#000000"/>
   </style:page-layout-properties>
   <style:header-style/>
   <style:footer-style/>
  </style:page-layout>
  <style:page-layout style:name="pm2">
   <style:page-layout-properties fo:page-width="8.2681in" fo:page-height="11.6929in" style:num-format="1" style:print-orientation="portrait" fo:margin-top="0.3937in" fo:margin-bottom="0.3937in" fo:margin-left="0.7874in" fo:margin-right="0.3937in" style:writing-mode="lr-tb" style:footnote-max-height="0in">
    <style:footnote-sep style:width="0.0071in" style:distance-before-sep="0.0398in" style:distance-after-sep="0.0398in" style:line-style="solid" style:adjustment="left" style:rel-width="25%" style:color="#000000"/>
   </style:page-layout-properties>
   <style:header-style/>
   <style:footer-style/>
  </style:page-layout>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Standard" style:page-layout-name="pm1"/>
  <style:master-page style:name="HTML" style:page-layout-name="pm2"/>
 </office:master-styles>
 <office:body>
  <office:text text:use-soft-page-breaks="true">
   <text:sequence-decls>
    <text:sequence-decl text:display-outline-level="0" text:name="Illustration"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Table"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Text"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Drawing"/>
   </text:sequence-decls>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BEGIN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LICENSE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BLOCK</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1.1/GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.0/LGPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.1</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Copyright</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(C)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2002-2017</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Németh</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">László</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">The</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">contents</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subject</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Mozilla</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Public</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1.1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;License&quot;);</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">except</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compliance</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">You</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">obtain</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">copy</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">http://www.mozilla.org/MPL/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Software</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distributed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distributed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IS&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">basis,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WITHOUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WARRANTY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">KIND,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">either</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">express</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">implied.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">See</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">specific</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">language</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">governing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rights</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">limitations</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hunspell</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">based</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MySpell</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">which</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Copyright</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(C)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2002</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Kevin</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hendricks.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Contributor(s):</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">David</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Einstein,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Davide</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Prina,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Giuseppe</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Modugno,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Gianluca</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Turconi,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Simon</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Brouwer,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Noll</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">János,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Bíró</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Árpád,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Goldman</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Eleonóra,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Sarlós</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Tamás,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Bencsáth</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Boldizsár,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Halácsy</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Péter,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Dvornik</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">László,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Gefferth</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">András,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Nagy</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Viktor,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Varga</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Dániel,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Chris</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Halls,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Rene</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Engelhard,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Bram</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Moolenaar,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Dafydd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Jones,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Harri</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Pitkänen</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Alternatively,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">contents</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">either</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GNU</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">General</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Public</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">later</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;GPL&quot;),</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GNU</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Lesser</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">General</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Public</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">later</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;LGPL&quot;),</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">which</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">applicable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">instead</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">those</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">If</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wish</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">either</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">others</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MPL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indicate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">decision</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">deleting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">replace</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">them</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">notice</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">other</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">required</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">If</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">do</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">delete</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">recipient</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">any</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MPL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LICENSE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BLOCK</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P4">/*</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Copyright</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2002</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Kevin</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">B.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hendricks,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Stratford,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Ontario,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Canada</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">And</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Contributors.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">All</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rights</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reserved.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Redistribution</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">without</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modification,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">permitted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provided</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">met:</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Redistributions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">retain</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">copyright</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">notice,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">disclaimer.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Redistributions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">form</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reproduce</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">copyright</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">notice,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">disclaimer</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">documentation</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and/or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">other</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">materials</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provided</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distribution.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">3.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">All</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modifications</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clearly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">marked</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">such.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">Binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">redistributions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">based</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clearly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">marked</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">versions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">documentation</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">and/or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">other</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">materials</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provided</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distribution.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THIS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SOFTWARE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PROVIDED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">KEVIN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">B.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">HENDRICKS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONTRIBUTORS</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">``AS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IS&apos;&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EXPRESS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IMPLIED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WARRANTIES,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INCLUDING,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NOT</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIMITED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TO,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IMPLIED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WARRANTIES</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MERCHANTABILITY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FITNESS</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FOR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">A</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PARTICULAR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PURPOSE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ARE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DISCLAIMED.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">IN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NO</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EVENT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SHALL</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">KEVIN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">B.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">HENDRICKS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONTRIBUTORS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIABLE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FOR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DIRECT,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INDIRECT,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INCIDENTAL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SPECIAL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EXEMPLARY,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONSEQUENTIAL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DAMAGES</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(INCLUDING,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NOT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIMITED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TO,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PROCUREMENT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SUBSTITUTE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GOODS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SERVICES;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LOSS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">USE,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DATA,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PROFITS;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUSINESS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INTERRUPTION)</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">HOWEVER</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CAUSED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ON</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THEORY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIABILITY,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WHETHER</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONTRACT,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">STRICT</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIABILITY,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TORT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(INCLUDING</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NEGLIGENCE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OTHERWISE)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ARISING</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WAY</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">USE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THIS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SOFTWARE,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EVEN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ADVISED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">POSSIBILITY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SUCH</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DAMAGE.</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;stdlib.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;string.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;stdio.h&gt;</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;ctype.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;algorithm&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;limits&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;string&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;vector&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;iomanip&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">here</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">logging.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Normally</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">empty</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;affixmgr.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;affentry.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;langnum.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;csutil.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">AffixMgr</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affpath</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">HashMgr</text:span>*&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">alldic</text:span>(<text:span text:style-name="T8">ptr</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>(<text:span text:style-name="T8">ptr</text:span>[<text:span text:style-name="T3">0</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">register</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">manager</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">load</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">from</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">aff</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">csconv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">utf8</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedmaptable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedbreaktable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedrep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">iconvtable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">oconvtable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simplified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(see</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">3rd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">field</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">simplifiedcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedcheckcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parseddefcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">phone</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s text:c="7"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">permits</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s text:c="5"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">middle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">last</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundroot</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s text:c="7"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">permitting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundforbidflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fordidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s text:c="7"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">more</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">within</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checkcompounddup</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">double</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non-compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">REP</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">substitution)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checkcompoundcase</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">upper</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lowercase</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">combinations</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checkcompoundtriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">triple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">letters</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">simplifiedtriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simplified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">triple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">letters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="28"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(Schiff+fahrt</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Schiffahrt)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">forbiddenword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FORBIDDENWORD</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">nosuggest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">don&apos;t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suggest</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NOSUGGEST</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">nongramsuggest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">language</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(see</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">http://l10n.openoffice.org/languages.html)</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">cpdwordmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> <text:s text:c="7"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">default:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">unlimited</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wordcount</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> <text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">undefined</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">default:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">unlimited</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllablecount</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">previous</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">counting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllables</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">previous</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">counting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllables</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxextra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modifier</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">count</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxappnd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checknum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checking</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numbers,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numbers</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">havecontclass</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">possible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">continuing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">classes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(double</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LEMMA_PRESENT:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">put</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">into</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morphological</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">output.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Lemma</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">presents</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morhological</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">description</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">It&apos;s</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">often</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">combined</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PSEUDOROOT.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">lemma_present</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">onlyincompound</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">maxngramsugs</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">undefined</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">maxdiff</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> <text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">undefined</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">onlymaxdiff</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">maxcpdsugs</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">undefined</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">nosplitsugs</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sugswithdots</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">keepcase</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">forceucase</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">warn</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">forbidwarn</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checksharps</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">substandard</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">fullstrip</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pFlag</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sFlag</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">CONTSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">contclasses</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">parse_file</text:span>(<text:span text:style-name="T8">affpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;Failure</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">aff</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%s\n&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affpath</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">true</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">this</text:span>-&gt;<text:span text:style-name="T5">log</text:span>(<text:span text:style-name="T8">affpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">false</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">disable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">logging.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MINCPDLEN</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">AffixMgr</text:span>::~<text:span text:style-name="T4">AffixMgr</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pass</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">linked</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entries</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clean</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pFlag</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pass</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">linked</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entries</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clean</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sFlag</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">j</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">iconvtable</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">oconvtable</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">phone</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundbegin</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundmiddle</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundend</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundpermitflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundforbidflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">compoundroot</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">forbiddenword</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">nosuggest</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">nongramsuggest</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">needaffix</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">lemma_present</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">circumfix</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T3">FREE_FLAG</text:span>(<text:span text:style-name="T9">onlyincompound</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">cpdwordmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pHMgr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">free_utf_tbl</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">checknum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifdef</text:span><text:span text:style-name="T2"> </text:span>MOZILLA_CLIENT</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span>[]<text:span text:style-name="T2"> </text:span>csconv;</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">void</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">finishFileMgr</text:span>(<text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convert</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">trees</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">process_pfx_tree_to_list</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">process_sfx_tree_to_list</text:span>();</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">aff</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">build</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">objects</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_file</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checking</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">duplication</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dupflags</text:span>[<text:span text:style-name="T3">CONTSIZE</text:span>];</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dupflags_ini</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indicator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">removing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">byte</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">order</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">firstline</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">open</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>(<text:span text:style-name="T8">affpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">afflst</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">could</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">open</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">description</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%s\n&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affpath</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">step</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">building</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">internal</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">structures</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ignoring</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">any</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">do</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">start</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">known</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">type</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indicator</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">line</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">line</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">byte</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">order</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">firstline</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">firstline</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">begins</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">byte</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">order</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">possible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incompatibility</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">old</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hunspell</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">versions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;\xEF\xBB\xBF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">erase</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">keyboard</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;KEY&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">keystring</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">try</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;TRY&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">trystring</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">name</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">.dict</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">.aff</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SET&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">encoding</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">encoding</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;UTF-8&quot;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">utf8</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifndef</text:span><text:span text:style-name="T2"> </text:span>OPENOFFICEORG</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifndef</text:span><text:span text:style-name="T2"> </text:span>MOZILLA_CLIENT</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">initialize_utf_tbl</text:span>();</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">COMPLEXPREFIXES</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">agglutinative</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">languages</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">right-to-left</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="5"/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">writing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">system</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">15</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPLEXPREFIXES&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">15</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">controlled</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDFLAG&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDBEGIN&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundbegin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">14</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDMIDDLE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">14</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDEND&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundbegin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound_check()</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">method</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">15</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDWORDMAX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">15</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_num</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">cpdwordmax</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sign</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDROOT&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound_check()</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">method</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">18</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDPERMITFLAG&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">18</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundpermitflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound_check()</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">method</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">18</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDFORBIDFLAG&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">18</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">compoundforbidflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">20</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDMORESUFFIXES&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">20</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKCOMPOUNDDUP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">checkcompounddup</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKCOMPOUNDREP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">19</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKCOMPOUNDTRIPLE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">19</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">checkcompoundtriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SIMPLIFIEDTRIPLE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">simplifiedtriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">17</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKCOMPOUNDCASE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">17</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">checkcompoundcase</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;NOSUGGEST&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">nosuggest</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">14</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;NONGRAMSUGGEST&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">14</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">nongramsuggest</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;FORBIDDENWORD&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">deprecated)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;LEMMA_PRESENT&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">lemma_present</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CIRCUMFIX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorphemes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">14</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ONLYINCOMPOUND&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">14</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`needaffixs&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">deprecated)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;PSEUDOROOT&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`needaffixs&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;NEEDAFFIX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">minimal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDMIN&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_num</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">cpdmin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">max.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllables</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDSYLLABLE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">16</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_cpdsyllable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound_check()</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">method</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SYLLABLENUM&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdsyllablenum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">controlled</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKNUM&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">checknum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">extra</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;WORDCHARS&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_array</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">wordchars</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">wordchars_utf16</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T9">utf8</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ignored</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">example,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Arabic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">optional</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">diacretics</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="5"/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">charachters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;IGNORE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_array</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars_utf16</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T9">utf8</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correcting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;REP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_reptable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">input</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conversion</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ICONV&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_convtable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">iconvtable</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ICONV&quot;</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">output</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conversion</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;OCONV&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_convtable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">oconvtable</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;OCONV&quot;</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">phonetic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">translation</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;PHONE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_phonetable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checkcompoundpattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">20</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKCOMPOUNDPATTERN&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">20</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_checkcpdtable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">defcompound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDRULE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_defcpdtable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">related</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">map</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;MAP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_maptable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">breakpoints</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;BREAK&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_breaktable</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">language</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">language</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">specific</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">codes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;LANG&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">lang</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_lang_num</text:span>(<text:span text:style-name="T9">lang</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">7</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;VERSION&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">7</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">startpos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">find_first_not_of</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">\t&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">7</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">startpos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">version</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T8">startpos</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;MAXNGRAMSUGS&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_num</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">maxngramsugs</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ONLYMAXDIFF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">onlymaxdiff</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">7</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;MAXDIFF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">7</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_num</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">maxdiff</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;MAXCPDSUGS&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_num</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">maxcpdsugs</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;NOSPLITSUGS&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">nosplitsugs</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;FULLSTRIP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">9</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">fullstrip</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SUGSWITHDOTS&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">sugswithdots</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;KEEPCASE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">keepcase</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`forceucase&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;FORCEUCASE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">forceucase</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`warn&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;WARN&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">warn</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;FORBIDWARN&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">10</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">forbidwarn</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">generator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SUBSTANDARD&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_flag</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T9">substandard</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKSHARPS&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">11</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">checksharps</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">P</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">S</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">type</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ft</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;PFX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ft</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;S&apos;</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SFX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ft</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;S&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ft</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><office:annotation office:name="__Annotation__9190_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:03:12.210839814</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">Initialize dupflags to 0.</text:span></text:p>
    </office:annotation><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dupflags_ini</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">memset</text:span>(<text:span text:style-name="T8">dupflags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T8">dupflags</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dupflags_ini</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<office:annotation-end office:name="__Annotation__9190_2562690574"/></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<office:annotation office:name="__Annotation__9191_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:06:10.230094166</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">Parse line and affix type, result is added to affix list and dupflags. Succes of parsing is in boolean return.</text:span></text:p>
    </office:annotation><text:span text:style-name="T5">parse_affix</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ft</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dupflags</text:span>)<office:annotation-end office:name="__Annotation__9191_2562690574"/>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><office:annotation office:name="__Annotation__9197_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:12:54.519820711</dc:date>
     <text:p text:style-name="P7"><text:span text:style-name="T11">QUESTION: Why are also binary trees converted to sorted lists in this call? Is that really needed?</text:span></text:p>
    </office:annotation><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>)<office:annotation-end office:name="__Annotation__9197_2562690574"/>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><office:annotation office:name="__Annotation__9196_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:08:28.848643271</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">When parsing fails, delete affix list and return error code 1.</text:span></text:p>
    </office:annotation><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><office:annotation-end office:name="__Annotation__9196_2562690574"/>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><office:annotation office:name="__Annotation__9198_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:13:37.342357580</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">Convert binary trees to sorted lists.</text:span></text:p>
    </office:annotation><text:span text:style-name="T5">finishFileMgr</text:span>(<text:span text:style-name="T8">afflst</text:span>)<office:annotation-end office:name="__Annotation__9198_2562690574"/>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">trees</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">can</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">speed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">performance</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">greatly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">taking</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">advantage</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">relationship</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">between</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">idea</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;subsets&quot;.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">View</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">potential</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">leading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">another</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">view</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(reversed)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">potential</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">trailing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">another.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">To</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">illustrate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">relationship</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">know</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ab&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">examine,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ab&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">leading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">need</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">examined.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Furthermore</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ab&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">present</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">then</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">none</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ab&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">need</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">examined.</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">The</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">same</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">argument</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">goes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reversed.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Then</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">top</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">off</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">why</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">examine</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">quickly</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">limit</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">examine</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(i.e.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">examine</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">leading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">supersets</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">they</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">exist)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">To</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">take</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">advantage</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;subset&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">relationship,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">need</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">links</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">from</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">One</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">take</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">current</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(call</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">it</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">nexteq)</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">take</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">current</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(call</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">it</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">nextne).</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Since</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">have</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">built</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ordered</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lists,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remains</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">properly</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">initialize</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">nextne</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">nexteq</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pointers</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">relate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">them</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><office:annotation office:name="__Annotation__9199_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:14:51.079635878</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">Optimize sorted lists by reinitializing nexteq and nextne pointers.</text:span></text:p>
    </office:annotation><text:span text:style-name="T5">process_pfx_order</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">process_sfx_order</text:span>();<office:annotation-end office:name="__Annotation__9199_2562690574"/></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">get</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">encoding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDCASE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">csconv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_current_cs</text:span>(<text:span text:style-name="T5">get_encoding</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><office:annotation office:name="__Annotation__9214_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:22:54.408534448</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">Extent wordchars with ASCII characters that it doesn&apos;t contain yet which have different upper case and lower case representation.</text:span></text:p>
    </office:annotation><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">255</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">csconv</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">cupper</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">csconv</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">clower</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T9">wordchars</text:span>.<text:span text:style-name="T5">find</text:span>((<text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">wordchars</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">i</text:span>);<office:annotation-end office:name="__Annotation__9214_2562690574"/></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">default</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BREAK</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definition</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">parsedbreaktable</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><office:annotation office:name="__Annotation__9212_2562690574">
     <dc:creator>Unknown Author</dc:creator>
     <dc:date>2018-02-06T14:20:58.358313955</dc:date>
     <text:p text:style-name="P6"><text:span text:style-name="T10">Default value for break table.</text:span></text:p>
    </office:annotation><text:span text:style-name="T9">breaktable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T1">&quot;-&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">breaktable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T1">&quot;^-&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">breaktable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T1">&quot;-$&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">parsedbreaktable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;<office:annotation-end office:name="__Annotation__9212_2562690574"/></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">want</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">able</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">quickly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">access</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">information</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">both</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">itself</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">need</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indexes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">build_pfxtree</text:span>(<text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pfxptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pfxptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">get</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">right</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">starting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">points</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x00FF</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">index</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">which</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">exist</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pFlag</text:span>[<text:span text:style-name="T8">flg</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setFlgNxt</text:span>(<text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pFlag</text:span>[<text:span text:style-name="T8">flg</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">null</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">key</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">always</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">inset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">them</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">head</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">element</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setNext</text:span>(<text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T3">0</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">normal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">insert</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">sp</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">otherwise</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">tree</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">insertion</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">can</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">easily</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">generated</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">later</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;;)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>())<text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T8">ep</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T8">ep</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">want</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">able</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">quickly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">access</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">information</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">both</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reverse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">itself;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">need</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indexes</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">build_sfxtree</text:span>(<text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">sfxptr</text:span>-&gt;<text:span text:style-name="T5">initReverseWord</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">get</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">right</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">starting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">point</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x00FF</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">index</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">which</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">exist</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sFlag</text:span>[<text:span text:style-name="T8">flg</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setFlgNxt</text:span>(<text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sFlag</text:span>[<text:span text:style-name="T8">flg</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">index</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">null</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">key</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">always</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">inset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">them</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">head</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">element</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setNext</text:span>(<text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T3">0</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">normal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">insert</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">sp</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">otherwise</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">tree</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">insertion</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">can</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">easily</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">generated</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">later</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;;)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>())<text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T8">ep</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T8">ep</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convert</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">from</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">tree</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">process_pfx_tree_to_list</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">process_pfx_in_order</text:span>(<text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">i</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">process_pfx_in_order</text:span>(<text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">process_pfx_in_order</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNext</text:span>(<text:span text:style-name="T8">nptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">process_pfx_in_order</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convert</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">from</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">tree</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">process_sfx_tree_to_list</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">process_sfx_in_order</text:span>(<text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">i</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">process_sfx_in_order</text:span>(<text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">process_sfx_in_order</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNext</text:span>(<text:span text:style-name="T8">nptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">process_sfx_in_order</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reinitialize</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PfxEntry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">links</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextEQ</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextNE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">speed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">searching</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">using</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">idea</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">leading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subsets</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">time</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">process_pfx_order</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">starting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">point</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">look</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">find</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">current</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">destination</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextNE</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextEQ</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T8">nptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())-&gt;<text:span text:style-name="T5">getKey</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>());</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clean</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">adding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">smart</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">termination</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">strings:</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">already</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">superset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">previous</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">but</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">can</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">here</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextNE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">properly</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">mptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">mptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">mptr</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">mptr</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">initialize</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SfxEntry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">links</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextEQ</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextNE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">speed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">searching</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">using</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">idea</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">leading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subsets</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">time</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">process_sfx_order</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">starting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">point</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">look</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">find</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">current</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">destination</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextNE</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextEQ</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T8">nptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())-&gt;<text:span text:style-name="T5">getKey</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">setNextEQ</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>());</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clean</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">adding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">smart</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">termination</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">strings:</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">already</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">superset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">previous</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">but</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">can</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">here</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NextNE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">properly</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">mptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">mptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">mptr</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">mptr</text:span>-&gt;<text:span text:style-name="T5">setNextNE</text:span>(<text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">result</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">debugging</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">debugflag</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">encode_flag</text:span>(<text:span text:style-name="T8">flag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_FLAG</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">st</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">condlen</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">l</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">group</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">st</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">group</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">l</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">group</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">group</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">utf8</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(!(*<text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>((*<text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">l</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">l</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">encodeit</text:span>(<text:span text:style-name="T4">AffEntry</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cs</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">cs</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;.&quot;</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">numconds</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T5">condlen</text:span>(<text:span text:style-name="T8">cs</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cslen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">cs</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">short_part</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">min</text:span>&lt;size_t&gt;(<text:span text:style-name="T3">MAXCONDLEN</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cslen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">memcpy</text:span>(<text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">c</text:span>.<text:span text:style-name="T9">conds</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cs</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">short_part</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">short_part</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MAXCONDLEN</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//blank</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">out</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remaining</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">space</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">memset</text:span>(<text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">c</text:span>.<text:span text:style-name="T9">conds</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">short_part</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MAXCONDLEN</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">short_part</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cs</text:span>[<text:span text:style-name="T3">MAXCONDLEN</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//there</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">more</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">than</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fit</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fixed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">space,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">so</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">its</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">long</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">opts</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeLONGCOND</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">c</text:span>.<text:span text:style-name="T9">l</text:span>.<text:span text:style-name="T9">conds2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">cs</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MAXCONDLEN_1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">c</text:span>.<text:span text:style-name="T9">l</text:span>.<text:span text:style-name="T9">conds2</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">numconds</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">entry</text:span>.<text:span text:style-name="T9">c</text:span>.<text:span text:style-name="T9">conds</text:span>[<text:span text:style-name="T3">0</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">s1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">leading</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">s2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(dots</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">infixes)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">inline</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">isSubset</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(((*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">s2</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;.&apos;</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s1</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s2</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>);</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">prefix_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxextra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pe</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_NOT</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>!(<text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">permit</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_END</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>(<text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pfx</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_NOT</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">permit</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_END</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pfx</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">prefix_check_twosfx</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxextra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pe</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">check_twosfx</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">check_twosfx</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morph</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">prefix_check_morph</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxextra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pe</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">check_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">check_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_NOT</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!((<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="43"/></text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morph</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">prefix_check_twosfx_morph</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">sfxextra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pe</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">check_twosfx_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">pe</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pe</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">check_twosfx_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non-compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">REP</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">substitution</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(see</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checkcompoundrep)?</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">cpdrep_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">wl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">lenp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">every</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">occurence</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">r</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">c_str</text:span>()))<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">candidate</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">type</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">lenp</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">type</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">candidate</text:span>.<text:span text:style-name="T5">replace</text:span>(<text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">lenp</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">outstrings</text:span>[<text:span text:style-name="T8">type</text:span>]);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">candidate_check</text:span>(<text:span text:style-name="T8">candidate</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">candidate</text:span>.<text:span text:style-name="T5">size</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">r</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">next</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">letter</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundings</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">there</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">patterns</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bound</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">cpdpat_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r1</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r2</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">/*affixed*/</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isSubset</text:span>(<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern2</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>(!<text:span text:style-name="T8">r1</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">cond</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>(<text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">cond</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>(!<text:span text:style-name="T8">r2</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">cond2</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>(<text:span text:style-name="T8">r2</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">r2</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">cond2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r2</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">zero</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TESTAFF</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">zero</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(0/flag)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">unmodified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stem</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(zero</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>(<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>((<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>[<text:span text:style-name="T3">0</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;0&apos;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">blen</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r1</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>[<text:span text:style-name="T3">0</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;0&apos;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">neighbouring</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">upper</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lower</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">cpdcase_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span>--)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pair</text:span>(<text:span text:style-name="T8">p</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pair_u</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">pair_u</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pair</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">a</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pair_u</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">pair_u</text:span>[<text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">h</text:span><text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pair_u</text:span>[<text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">l</text:span>)<text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">b</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">pair_u</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">pair_u</text:span>[<text:span text:style-name="T3">0</text:span>].<text:span text:style-name="T9">h</text:span><text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pair_u</text:span>[<text:span text:style-name="T3">0</text:span>].<text:span text:style-name="T9">l</text:span>)<text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T5">unicodetoupper</text:span>(<text:span text:style-name="T8">a</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">a</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>(<text:span text:style-name="T5">unicodetoupper</text:span>(<text:span text:style-name="T8">b</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">b</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>(<text:span text:style-name="T8">a</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;-&apos;</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">b</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;-&apos;</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">a</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">b</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pos</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">csconv</text:span>[<text:span text:style-name="T8">a</text:span>].<text:span text:style-name="T9">ccase</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">csconv</text:span>[<text:span text:style-name="T8">b</text:span>].<text:span text:style-name="T9">ccase</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">a</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;-&apos;</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">b</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;-&apos;</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">metachar_data</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">btpp</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">metacharacter</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(*,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">?)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">position</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">backtracking</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">btwp</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">position</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">metacharacters</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">btnum</text:span>;<text:span text:style-name="T2"> <text:s text:c="9"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">matched</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">metacharacter</text:span></text:p>
   <text:p text:style-name="P1">};</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">patterns</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">defcpd_check</text:span>(<text:span text:style-name="T4">hentry</text:span>***<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">def</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">all</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">words</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">w</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">def</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">words</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">metachar_data</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">btinfo</text:span>(<text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">bt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wnum</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">last</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">COMPOUNDRULE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wnum</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">w</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;*&apos;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;?&apos;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">j</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wnum</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">w</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">position</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;words&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">position</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;*&apos;</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;?&apos;</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wend</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;?&apos;</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span>].<text:span text:style-name="T9">btpp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span>].<text:span text:style-name="T9">btwp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wend</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>((*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>],</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span>(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wp</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span>].<text:span text:style-name="T9">btnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span>].<text:span text:style-name="T9">btwp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span>].<text:span text:style-name="T9">btnum</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>++<text:span text:style-name="T8">bt</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">btinfo</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T8">bt</text:span>+<text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok2</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>((*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span>],</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span>(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wp</text:span>]-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">pp</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">wp</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!(<text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>((<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;*&apos;</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;?&apos;</text:span>)))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">backtrack</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">bt</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">btnum</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">btpp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">wp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">btwp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">btnum</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">btinfo</text:span>[<text:span text:style-name="T8">bt</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">btnum</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>--<text:span text:style-name="T8">bt</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">bt</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">all</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span>)))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">zero</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ending</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;*&apos;</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>][<text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;?&apos;</text:span>)))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">pp</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>[<text:span text:style-name="T8">i</text:span>].<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pp</text:span>))</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>(*<text:span text:style-name="T8">words</text:span>)[<text:span text:style-name="T8">wnum</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">w</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T7">inline</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">candidate_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">rv</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix_check(word,len,1);</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(rv)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound-checking</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_syllable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">num</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">binary_search</text:span>(<text:span text:style-name="T9">cpdvowels</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdvowels</text:span>.<text:span text:style-name="T5">end</text:span>(),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span>]))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>++<text:span text:style-name="T8">num</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">cpdvowels_utf16</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">binary_search</text:span>(<text:span text:style-name="T9">cpdvowels_utf16</text:span>.<text:span text:style-name="T5">begin</text:span>(),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T9">cpdvowels_utf16</text:span>.<text:span text:style-name="T5">end</text:span>(),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">w</text:span>[<text:span text:style-name="T8">i</text:span>]))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>++<text:span text:style-name="T8">num</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">num</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">void</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">setcminmax</text:span>(<text:span text:style-name="T7">int</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">cmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdmin</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">cmin</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>((*<text:span text:style-name="T8">cmin</text:span>)++;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">cmin</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">word</text:span>[*<text:span text:style-name="T8">cmin</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">cmin</text:span>)++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">cmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">cmax</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>((*<text:span text:style-name="T8">cmax</text:span>)--;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">cmax</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">word</text:span>[*<text:span text:style-name="T8">cmax</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">cmax</text:span>)--)</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">cmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdmin</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">cmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correctly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spelled</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(XXX)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">compound_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numsyllable</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxwordnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">is_sug</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="40"/></text:span><text:span text:style-name="T7">int</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">info</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmin</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">striple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldcmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldcmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldlen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">checkedstriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affixed</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwords</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">checked_prefix</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">setcminmax</text:span>(&amp;<text:span text:style-name="T8">cmin</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">cmax</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmin</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">go</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">UTF-8</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwords</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">words</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">oldnumsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numsyllable</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simplified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checkcompoundpattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern3</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern3</text:span>.<text:span text:style-name="T5">c_str</text:span>(),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern3</text:span>.<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T8">scpd</text:span>++)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">size</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">break</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simplified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checkcompoundpattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">replace</text:span>(<text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">replace</text:span>(<text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern2</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">replace</text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern2</text:span>.<text:span text:style-name="T5">size</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>,</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern3</text:span>.<text:span text:style-name="T5">size</text:span>()));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">oldlen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>+</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern2</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>-</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">pattern3</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">oldcmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmin</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">oldcmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">setcminmax</text:span>(&amp;<text:span text:style-name="T8">cmin</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">cmax</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">cmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdmin</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">ch</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FIRST</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WORD</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">affixed</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>());<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">without</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!((<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span>((!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>(<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">affixed</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">onlycpdrule</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">compoundflag</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>((<text:span text:style-name="T9">compoundforbidflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>((<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T9">compoundbegin</text:span>)))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">twofold</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">+</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="36"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="36"/></text:span><text:span text:style-name="T9">compoundbegin</text:span>))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>((<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T9">compoundmiddle</text:span>)))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">twofold</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">+</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="36"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="36"/></text:span><text:span text:style-name="T9">compoundmiddle</text:span>))))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="32"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="32"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="32"/></text:span>(<text:span text:style-name="T8">is_sug</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="33"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">continue;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non_compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundend</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T8">is_sug</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundroot</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>[<text:span text:style-name="T8">wnum</text:span>])<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>((<text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>((<text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>||<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;F&apos;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hardwired</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">codes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;G&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;H&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>!((<text:span text:style-name="T9">checkcompoundtriple</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">triple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">letters</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span>])<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(((<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>]))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>((<text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]))<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word[i+1]</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">==</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T9">checkcompoundcase</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">cpdcase_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>||<text:span text:style-name="T2"> </text:span>((!<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hardwired</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dic.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">codes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T1">&apos;x&apos;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T1">&apos;%&apos;</text:span>,</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ok</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">+</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(hungarian</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convention)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>())<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NEXT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WORD(S)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv_first</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">striple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simplifiedtriple</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">simplifiedtriple</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">striple</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">checkedstriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">i</text:span>--;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;fahrt&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">instead</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;ahrt&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;Schiffahrt&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>])</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">striple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">without</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>!((<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span>(<text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span>(!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond2</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond2</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FORCEUCASE</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forceucase</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forceucase</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!(<text:span text:style-name="T8">info</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">info</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SPELL_ORIGCAP</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>[<text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>])</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">oldnumsyllable2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numsyllable</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">oldwordnum2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hardwired</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;I&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;J&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">numsyllable</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundroot</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundroot</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T8">is_sug</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conventions:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">consist</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">more,</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">then</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">6,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lesser.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>((<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(((<text:span text:style-name="T9">cpdwordmax</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdwordmax</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>((<text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T3">HENTRY_WORD</text:span>(<text:span text:style-name="T8">rv</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>))<text:span text:style-name="T2"> </text:span>&lt;=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>!<text:span text:style-name="T5">cpdpat_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>((!<text:span text:style-name="T9">checkcompounddup</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>)))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond2</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">it</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non-compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">cpdrep_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable2</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or/and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">sfxflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>((<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T3">IN_CPD_END</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>((<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T3">IN_CPD_END</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>((<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_END</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond2</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>[<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>].<text:span text:style-name="T9">cond2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">cpdpat_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affixed</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non_compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FORCEUCASE</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forceucase</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forceucase</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!(<text:span text:style-name="T8">info</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">info</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SPELL_ORIGCAP</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>(<text:span text:style-name="T8">is_sug</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))))</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pfxappnd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word+i,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NULL</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convention:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">more,</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">than</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix+word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">counts</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">num.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(inflections,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">derivations)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">sfxappnd</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tmp</text:span>(<text:span text:style-name="T9">sfxappnd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword(<text:span text:style-name="T8">tmp</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>-=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T8">tmp</text:span>)<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfxextra</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>-=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfxextra</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">+</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(hungarian</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convention)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>())<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">num,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">last</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SYLLABLENUM</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`s&apos;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">cpdsyllablenum</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">sfxflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;c&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;J&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;I&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;J&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundroot</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundroot</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or/and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conventions:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">consist</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">otherwise</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">6,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lesser.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(((<text:span text:style-name="T9">cpdwordmax</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdwordmax</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>((<text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>((!<text:span text:style-name="T9">checkcompounddup</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">it</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non-compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">cpdrep_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable2</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(recursive</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">call)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxwordnum</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">compound_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">numsyllable</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxwordnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">is_sug</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">info</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>((<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T5">cpdpat_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affixed</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span>(<text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>!<text:span text:style-name="T5">cpdpat_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affixed</text:span>))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbid</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">it</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non-compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">cpdrep_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">part</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>];</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">checkcompoundrep</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">cpdrep_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">forbiddenword</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv2</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T8">rv2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv2</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="24"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv2</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv2</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="24"/></text:span>(<text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">rv2</text:span>-&gt;<text:span text:style-name="T9">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">r</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">striple</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">checkedstriple</text:span>);<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">striple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">checkedstriple</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">i</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">checkedstriple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">striple</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ok</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">soldi</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldlen</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">cmin</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldcmin</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">cmax</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldcmax</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">scpd</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">simplifiedcpd</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">size</text:span>());<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simplifiedcpd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">scpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">soldi</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">word</text:span>);<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">more</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">optim.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">soldi</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T8">onlycpdrule</text:span>++<text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlycpd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correctly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spelled</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(XXX)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">compound_check_morph</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numsyllable</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxwordnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hu_mov_rule</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="35"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">partresult</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum2</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">checked_prefix</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">presult</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmin</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affixed</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">hentry</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwords</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">setcminmax</text:span>(&amp;<text:span text:style-name="T8">cmin</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">cmax</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmin</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">go</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">UTF-8</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmax</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwords</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">words</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">oldnumsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numsyllable</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ch</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FIRST</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WORD</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">affixed</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">partresult</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(*<text:span text:style-name="T8">partresult</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>());<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">without</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!((<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">onlycpdrule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>((!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>(<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)))))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">affixed</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_FLD</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_PART</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">HENTRY_FIND</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_STEM</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_FLD</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_STEM</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_FLD</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T9">compoundflag</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">compoundflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>((<text:span text:style-name="T9">compoundforbidflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="24"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>((<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">compoundbegin</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T9">compoundbegin</text:span>)))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">twofold</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix+compound</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">compoundbegin</text:span>))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>((<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">compoundmiddle</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T9">compoundmoresuffixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T9">compoundmiddle</text:span>)))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">twofold</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix+compound</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_OTHER</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T9">compoundmiddle</text:span>))))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">p</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">p</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_FLD</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_PART</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">line_uniq_app</text:span>(<text:span text:style-name="T8">p</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MSEP_REC</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">presult</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">p</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non_compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundend</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>!<text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="33"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundroot</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundroot</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">checked_prefix</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>[<text:span text:style-name="T8">wnum</text:span>])<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundmiddle</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>||<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hu_mov_rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;F&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="32"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;G&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="32"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;H&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!((<text:span text:style-name="T9">checkcompoundtriple</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">triple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">letters</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(<text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span>])<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(((<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>]))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>((<text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]))<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word[i+1]</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">==</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">test</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CHECKCOMPOUNDPATTERN</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span>!<text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="17"/></text:span><text:span text:style-name="T5">cpdpat_check</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affixed</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">checkcompoundcase</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">cpdcase_check</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((!<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hu_mov_rule</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T1">&apos;x&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T1">&apos;%&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">+</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(hungarian</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convention)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>())<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NEXT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WORD(S)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv_first</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>));<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">without</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">search</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="24"/></text:span>!((<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span>(<text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span>(!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>[<text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">presult</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_PART</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">HENTRY_FIND</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_STEM</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_STEM</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">HENTRY_WORD</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">store</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pointer</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">oldnumsyllable2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numsyllable</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">oldwordnum2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;I&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;J&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">numsyllable</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundroot</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundroot</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conventions:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">consist</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">more,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">then</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">6,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lesser.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(((<text:span text:style-name="T9">cpdwordmax</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdwordmax</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>((<text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(<text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T3">HENTRY_WORD</text:span>(<text:span text:style-name="T8">rv</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">blen</text:span>))<text:span text:style-name="T2"> </text:span>&lt;=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((!<text:span text:style-name="T9">checkcompounddup</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">presult</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_PART</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">HENTRY_FIND</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_STEM</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_STEM</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">HENTRY_WORD</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">store</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pointer</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable2</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or/and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">sfxflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">onlycpdrule</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_END</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">defcpd_check</text:span>(&amp;<text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">m</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">m</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">m</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">m</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">presult</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">m</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_FLD</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_PART</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T5">line_uniq_app</text:span>(<text:span text:style-name="T8">m</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MSEP_REC</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">m</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">non_compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundforbidflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T9">sfx</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbiddenwords</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">calculate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">num.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(inflections,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">derivations)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">sfxappnd</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tmp</text:span>(<text:span text:style-name="T9">sfxappnd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>reverseword(<text:span text:style-name="T8">tmp</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>-=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T8">tmp</text:span>)<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfxextra</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>-=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sfxextra</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">+</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(hungarian</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">convention)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">get_syllable</text:span>(<text:span text:style-name="T9">pfx</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>())<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">num,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">last</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SYLLABLENUM</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`s&apos;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">cpdsyllablenum</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">sfxflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;c&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;J&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;I&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;J&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">increment</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">has</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundroot</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundroot</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundroot</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">wordnum</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or/and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix?</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conventions:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">acceptable,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">consist</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">otherwise</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">6,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lesser.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(((<text:span text:style-name="T9">cpdwordmax</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdwordmax</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>((<text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((!<text:span text:style-name="T9">checkcompounddup</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv_first</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">m</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">compoundflag</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">m</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">m</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">m</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">affix_check_morph</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundend</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">presult</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">m</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_FLD</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_PART</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">line_uniq_app</text:span>(<text:span text:style-name="T8">m</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MSEP_REC</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">m</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T3">MSEP_REC</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable2</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">perhaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">second</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(recursive</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">call)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxwordnum</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ok</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">compound_check_morph</text:span>((<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T8">numsyllable</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxwordnum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wnum</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">words</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rwords</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">presult</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">st</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">wordnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">numsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldnumsyllable</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldwordnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T8">onlycpdrule</text:span>++<text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlycpd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">inline</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">isRevSubset</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s1</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="33"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end_of_s2</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="33"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>((*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">end_of_s2</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;.&apos;</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s1</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">end_of_s2</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">len</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s1</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>);</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">suffix_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cclass</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="38"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">se</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">cclass</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&amp;&amp;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">!cclass</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">except</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(!<text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">no</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((!<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(!<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T8">cclass</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!((<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span>(<text:span text:style-name="T3">FLAG</text:span>)<text:span text:style-name="T8">cclass</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfx</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FULLSTRIP</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isRevSubset</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&amp;&amp;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">!cclass</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">except</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(!<text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">no</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((!<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(!<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!((<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="42"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T8">cclass</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!((<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_END</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T8">cclass</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>;<text:span text:style-name="T2"> <text:s text:c="16"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfx</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">sfxflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxappnd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spec.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hungarian</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">LANG_hu</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()[<text:span text:style-name="T3">0</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;i&apos;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()[<text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;y&apos;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>()[<text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;t&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T9">sfxextra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LANG_hu</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">section</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">suffix_check_twosfx</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="45"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">se</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">contclasses</text:span>[<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">check_twosfx</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FULLSTRIP</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isRevSubset</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">contclasses</text:span>[<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">check_twosfx</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">sfxflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxappnd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morph</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">suffix_check_twosfx_morph</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="48"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result2</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result3</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">se</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">contclasses</text:span>[<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">check_twosfx_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ppfx</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FULLSTRIP</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isRevSubset</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">contclasses</text:span>[<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">check_twosfx_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">sfxflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">sfxappnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUG:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sfxappnd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stateless</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result2</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result3</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result3</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result3</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">strlinecat</text:span>(<text:span text:style-name="T8">result2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result3</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result2</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">result2</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">suffix_check_morph</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cclass</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">se</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">cclass</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&amp;&amp;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">!cclass</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">except</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(!<text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">no</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((!<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(!<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!((<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">cclass</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>!((<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cclass</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">needflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ppfx</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">HENTRY_FIND</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_STEM</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_STEM</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">HENTRY_WORD</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">get_next_homonym</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cclass</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">general</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>();<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FULLSTRIP</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*((<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)(<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">sp</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">isRevSubset</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounds</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((((<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_BEGIN</text:span>))<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&amp;&amp;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">!cclass</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">except</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">when</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundpermitflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(!<text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">no</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((!<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(!<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">circumfix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T8">ppfx</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ep</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fogemorpheme</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">in_compound</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!((<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="43"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>(<text:span text:style-name="T8">cclass</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cclass</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">needflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ppfx</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">HENTRY_FIND</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_STEM</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">MORPH_STEM</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T3">HENTRY_WORD</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">rv</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T5">HENTRY_DATA2</text:span>(<text:span text:style-name="T8">rv</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">debugflag</text:span>(<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>());</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">get_next_homonym</text:span>(<text:span text:style-name="T8">rv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sfxopts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ppfx</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cclass</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextEQ</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getNextNE</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correctly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spelled</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">affix_check</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="37"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="37"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="37"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(also</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">crossed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">still</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">havecontclass</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">still</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">rv</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">still</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">rv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check_twosfx</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_NOT</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rv</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correctly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">spelled</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">affix_check_morph</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(also</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">crossed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">still</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_compound</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">havecontclass</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">sfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">pfx</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">still</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">suffix_check_twosfx_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">still</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">found</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-level</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">st</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">prefix_check_twosfx_morph</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">IN_CPD_NOT</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">needflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">st</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morphcmp():</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compare</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MORPH_DERI_SFX,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MORPH_INFL_SFX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MORPH_TERM_SFX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fields</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">inputs</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">inputs</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">equal</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">inputs</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">equal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">secondary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">otherwise</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-1</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">static</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">morphcmp</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">te</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">olds</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">oldt</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">t</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">olds</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strchr</text:span>(<text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\n&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_DERI_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">olds</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_INFL_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">olds</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_TERM_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">olds</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">oldt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strchr</text:span>(<text:span text:style-name="T8">t</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\n&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">t</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_DERI_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">oldt</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_INFL_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">oldt</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_TERM_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">oldt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_TAG_LEN</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_TAG_LEN</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">te</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((*<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">t</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">te</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">s</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">t</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">s</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\n&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\t&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">t</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\n&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\t&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\0&apos;</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">te</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">te</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terminal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">difference</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">olds</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">olds</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_DERI_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">olds</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_INFL_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">olds</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_TERM_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">olds</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">oldt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">t</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_DERI_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">oldt</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_INFL_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">t</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">oldt</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_TERM_SFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">oldt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">t</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">se</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">te</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">morphgen</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">morph</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">targetmorph</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">level</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">morph</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">substandard</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ap</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">substandard</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>))</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">morphcmp</text:span>(<text:span text:style-name="T8">morph</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">targetmorph</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stemmorphcatpos</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">mymorph</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">input</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fields,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">if</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">exist</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">morph</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_INFL_SFX</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T8">morph</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_DERI_SFX</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">mymorph</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">morph</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">mymorph</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">stemmorphcatpos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">mymorph</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">stemmorphcatpos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">c</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x00FF</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sFlag</text:span>[<text:span text:style-name="T8">c</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>((<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">don&apos;t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">generate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">substandard</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">substandard</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stemmorph</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">stemmorphcatpos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">mymorph</text:span>.<text:span text:style-name="T5">replace</text:span>(<text:span text:style-name="T8">stemmorphcatpos</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">stemmorph</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">mymorph</text:span>.<text:span text:style-name="T5">c_str</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">stemmorph</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getMorph</text:span>();</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cmp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">morphcmp</text:span>(<text:span text:style-name="T8">stemmorph</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">targetmorph</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cmp</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">add</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">check</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">c_str</text:span>());<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">extra</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dic</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">check</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">check</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>!(<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">check</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">check</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">check</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">check</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">recursive</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">call</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">secondary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">level</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cmp</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">substandard</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">add</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword2</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">morphgen</text:span>(<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">size</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stemmorph</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">targetmorph</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">newword2</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlgNxt</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>();</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">expand_rootword</text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">guessword</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wlst</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>,</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">bad</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">badl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">phon</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>!(<text:span text:style-name="T8">al</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ap</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>(<text:span text:style-name="T9">onlyincompound</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ap</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>)))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">ts</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">allow</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">nh</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">phonetic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">phon</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">phon</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">allow</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">ts</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">nh</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">c</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x00FF</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sFlag</text:span>[<text:span text:style-name="T8">c</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">sptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">i</text:span>])<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(!<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T8">badl</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getAffix</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">bad</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">badl</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>())<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>!(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">onlyincompound</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">add</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">allow</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">allowCross</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">nh</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">special</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">phonetic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">phon</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">prefix</text:span>(<text:span text:style-name="T8">phon</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>(<text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword(<text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">prefix</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">prefix</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span>)</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">allow</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">nh</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">sptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">sptr</text:span>-&gt;<text:span text:style-name="T5">getFlgNxt</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">n</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">cross</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">products</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">n</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">j</text:span>].<text:span text:style-name="T9">allow</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">c</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">k</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x00FF</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pFlag</text:span>[<text:span text:style-name="T8">c</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">k</text:span>])<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">allowCross</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(!<text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span>((<text:span text:style-name="T8">badl</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>(<text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">bad</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>())<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">l1</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">j</text:span>].<text:span text:style-name="T9">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">add</text:span>(<text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">j</text:span>].<text:span text:style-name="T9">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">l1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">allow</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">allowCross</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">nh</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">cptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cptr</text:span>-&gt;<text:span text:style-name="T5">getFlgNxt</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pure</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefixes</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">m</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">m</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">m</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">c</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">m</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x00FF</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">PfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pFlag</text:span>[<text:span text:style-name="T8">c</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>[<text:span text:style-name="T8">m</text:span>])<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(!<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>()<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="11"/></text:span>((<text:span text:style-name="T8">badl</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>())<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKey</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">bad</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getKeyLen</text:span>())<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needaffix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>!(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T9">needaffix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">circumfix</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">circumfix</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>()))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="13"/></text:span>(<text:span text:style-name="T9">onlyincompound</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getCont</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getContLen</text:span>())))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">newword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">add</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nh</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">maxn</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">newword</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">allow</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">allowCross</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">wlst</text:span>[<text:span text:style-name="T8">nh</text:span>].<text:span text:style-name="T9">orig</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">nh</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getFlgNxt</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nh</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">replacing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">replentry</text:span>&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_reptable</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">iconv</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">RepList</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_iconvtable</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">iconvtable</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">iconvtable</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">oconv</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">RepList</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_oconvtable</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">oconvtable</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">oconvtable</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">replacing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">phonetable</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_phonetable</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">phone</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">phone</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">map</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">mapentry</text:span>&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_maptable</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">maptable</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">map</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_breaktable</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">breaktable</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">text</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">encoding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_encoding</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">encoding</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">encoding</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SPELL_ENCODING</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">encoding</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">text</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">encoding</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_langnum</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">double</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">option</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_complexprefixes</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">complexprefixes</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FULLSTRIP</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">option</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_fullstrip</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">fullstrip</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_keepcase</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">keepcase</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_forceucase</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forceucase</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_warn</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">warn</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_forbidwarn</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbidwarn</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_checksharps</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checksharps</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">encode_flag</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aflag</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">encode_flag</text:span>(<text:span text:style-name="T8">aflag</text:span>);</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">preferred</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ignore</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suggestions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_ignore</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">ignorechars</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars</text:span>.<text:span text:style-name="T5">c_str</text:span>();</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">preferred</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ignore</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suggestions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_ignore_utf16</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars_utf16</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">keyboard</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suggestions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_key_string</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">keystring</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">keystring</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SPELL_KEYSTRING</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T9">keystring</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">preferred</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">try</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suggestions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_try_string</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">trystring</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T9">trystring</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">preferred</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">try</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suggestions</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_wordchars</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">wordchars</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_wordchars_utf16</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">wordchars_utf16</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">there</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compounding?</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_compound</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundbegin</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">empty</text:span>();</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">control</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_compoundflag</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">compoundflag</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">control</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_forbiddenword</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">control</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_nosuggest</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosuggest</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">control</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_nongramsuggest</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nongramsuggest</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modify</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_needaffix</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">needaffix</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlyincompound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_onlyincompound</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlyincompound</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">value</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_version</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">version</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">utility</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">method</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">look</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">lookup</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">he</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">alldic</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">he</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">he</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">alldic</text:span>[<text:span text:style-name="T8">i</text:span>]-&gt;<text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">he</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">value</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">have_contclass</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">havecontclass</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">utf8</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_utf8</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">utf8</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_maxngramsugs</text:span>(<text:span text:style-name="T7">void</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">maxngramsugs</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_maxcpdsugs</text:span>(<text:span text:style-name="T7">void</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">maxcpdsugs</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_maxdiff</text:span>(<text:span text:style-name="T7">void</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">maxdiff</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_onlymaxdiff</text:span>(<text:span text:style-name="T7">void</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">onlymaxdiff</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">nosplitsugs</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_nosplitsugs</text:span>(<text:span text:style-name="T7">void</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">nosplitsugs</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sugswithdots</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_sugswithdots</text:span>(<text:span text:style-name="T7">void</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sugswithdots</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_flag</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">out</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">out</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">FLAG_NULL</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!(*<text:span text:style-name="T8">out</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parameter\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>*<text:span text:style-name="T8">out</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flag</text:span>(<text:span text:style-name="T8">s</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">num</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_num</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">out</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">out</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parameter\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>*<text:span text:style-name="T8">out</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">s</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1"><text:soft-page-break/>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">max</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syllablecount</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_cpdsyllable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">cpdmaxsyllable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">cpdvowels</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">sort</text:span>(<text:span text:style-name="T9">cpdvowels</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdvowels</text:span>.<text:span text:style-name="T5">end</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T9">cpdvowels_utf16</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">sort</text:span>(<text:span text:style-name="T9">cpdvowels_utf16</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">cpdvowels_utf16</text:span>.<text:span text:style-name="T5">end</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compoundsyllable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">information\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">cpdvowels</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AEIOUaeiou&quot;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correcting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_reptable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">parsedrep</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedrep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numrep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numrep</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numrep</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incorrect</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">numrep</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numrep</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numrep</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">replentry</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">type</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;REP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;^&apos;</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">type</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">type</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">mystrrep</text:span>(<text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;_&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>[<text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;$&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">type</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">outstrings</text:span>[<text:span text:style-name="T8">type</text:span>].<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">mystrrep</text:span>(<text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">outstrings</text:span>[<text:span text:style-name="T8">type</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;_&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">outstrings</text:span>[<text:span text:style-name="T8">type</text:span>].<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">reptable</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correcting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_convtable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T4">RepList</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">rl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="30"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">keyword</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">rl</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numrl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numrl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numrl</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incorrect</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>*<text:span text:style-name="T8">rl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">RepList</text:span>(<text:span text:style-name="T8">numrl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">rl</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">num</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numrl</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pattern</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pattern2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">keyword</text:span>.<text:span text:style-name="T5">size</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">keyword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">keyword</text:span>.<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">rl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>*<text:span text:style-name="T8">rl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">pattern</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">pattern2</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pattern</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pattern2</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>(*<text:span text:style-name="T8">rl</text:span>)-&gt;<text:span text:style-name="T5">add</text:span>(<text:span text:style-name="T8">pattern</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pattern2</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">typical</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fault</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">correcting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_phonetable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">phone</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">num</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">num</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">num</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">phone</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">phonetable</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">utf8</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T9">utf8</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">phone-&gt;num</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">num</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">old_size</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;PHONE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">mystrrep</text:span>(<text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">back</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;_&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">old_size</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T1">&quot;&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">phone</text:span>-&gt;<text:span text:style-name="T9">rules</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T1">&quot;&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>init_phonet_hash(*<text:span text:style-name="T9">phone</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checkcompoundpattern</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_checkcpdtable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">parsedcheckcpd</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedcheckcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numcheckcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numcheckcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numcheckcpd</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">numcheckcpd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numcheckcpd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numcheckcpd</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">patentry</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">20</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;CHECKCOMPOUNDPATTERN&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">20</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">slash_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&apos;/&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">slash_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>(<text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">slash_pos</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T8">slash_pos</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">cond</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flag</text:span>(<text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern2</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">slash_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern2</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&apos;/&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">slash_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>(<text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">slash_pos</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern2</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T8">slash_pos</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">cond2</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flag</text:span>(<text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">checkcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T9">pattern3</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">simplifiedcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">i</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compound</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rule</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_defcpdtable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">parseddefcpd</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parseddefcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numdefcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numdefcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numdefcpd</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">numdefcpd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numdefcpd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numdefcpd</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">flagentry</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPOUNDRULE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">12</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numdefcpd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parenthesized</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;(&apos;</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">k</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chb</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">che</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;(&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">parpos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T8">k</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;)&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">parpos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">chb</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">che</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">parpos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">parpos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">chb</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;*&apos;</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">chb</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;?&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T3">FLAG</text:span>)*<text:span text:style-name="T8">chb</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flags</text:span>(<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">chb</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">che</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flags</text:span>(<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">defcpdtable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">map</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_maptable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">parsedmaptable</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedmaptable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nummap</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">nummap</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nummap</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">maptable</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">nummap</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">nummap</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nummap</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">maptable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">mapentry</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;MAP&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">nummap</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">k</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chb</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">che</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;(&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">parpos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T8">k</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;)&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">parpos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">chb</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">che</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">parpos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">parpos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>++<text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0xc0</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0x80</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="20"/></text:span>++<text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">che</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>--<text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">maptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">chb</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">che</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">maptable</text:span>.<text:span text:style-name="T5">back</text:span>().<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">breakpoint</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_breaktable</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">parsedbreaktable</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">parsedbreaktable</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numbreak</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numbreak</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numbreak</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">numbreak</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">breaktable</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">numbreak</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numbreak</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numbreak</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">j</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;BREAK&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">numbreak</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">breaktable</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">breaktable</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">static_cast</text:span>&lt;<text:span text:style-name="T4">size_t</text:span>&gt;(<text:span text:style-name="T8">numbreak</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">void</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">reverse_condition</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">piece</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">reverse_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>.<text:span text:style-name="T5">rbegin</text:span>();<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>.<text:span text:style-name="T5">rend</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">k</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">k</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">neg</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>*(<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>*<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>*<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">neg</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>*(<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;^&apos;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;^&apos;</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*(<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>*(<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">neg</text:span>)</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="10"/></text:span>*(<text:span text:style-name="T8">k</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">k</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">class</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">entries_container</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">AffEntry</text:span>*&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">AffixMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">m_mgr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">m_at</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">public</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">entries_container</text:span>(<text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">at</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">mgr</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">m_mgr</text:span>(<text:span text:style-name="T8">mgr</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">m_at</text:span>(<text:span text:style-name="T8">at</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">void</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">release</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">void</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">initialize</text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numents</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">opts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">numents</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">m_at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">PfxEntry</text:span>(<text:span text:style-name="T9">m_mgr</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">SfxEntry</text:span>(<text:span text:style-name="T9">m_mgr</text:span>));</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">back</text:span>()-&gt;<text:span text:style-name="T9">opts</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">opts</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">back</text:span>()-&gt;<text:span text:style-name="T9">aflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aflag</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">AffEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">add_entry</text:span>(<text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">opts</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">m_at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">PfxEntry</text:span>(<text:span text:style-name="T9">m_mgr</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">SfxEntry</text:span>(<text:span text:style-name="T9">m_mgr</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">AffEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ret</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">back</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ret</text:span>-&gt;<text:span text:style-name="T9">opts</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>[<text:span text:style-name="T3">0</text:span>]-&gt;<text:span text:style-name="T9">opts</text:span><text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">opts</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ret</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">AffEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">first_entry</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>[<text:span text:style-name="T3">0</text:span>];</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>~<text:span text:style-name="T4">entries_container</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">AffEntry</text:span>*&gt;::<text:span text:style-name="T4">iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">begin</text:span>()<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">begin</text:span>();<text:span text:style-name="T2"> </text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">AffEntry</text:span>*&gt;::<text:span text:style-name="T4">iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T6">end</text:span>()<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">entries</text:span>.<text:span text:style-name="T5">end</text:span>();<text:span text:style-name="T2"> </text:span>}</text:p>
   <text:p text:style-name="P1">};</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">parse_affix</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">at</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="26"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dupflags</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numents</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AffEntry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">structures</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span></text:p>
   <text:p text:style-name="P1"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">identifier</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ff</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">entries_container</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentries</text:span>(<text:span text:style-name="T8">at</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">this</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">checking</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">syntax</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifdef</text:span><text:span text:style-name="T2"> </text:span>DEBUG</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span>basefieldnum<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P2">#endif</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">split</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">header</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">into</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pieces</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">type</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">char</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">aflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flag</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;S&apos;</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dupflags</text:span>[<text:span text:style-name="T8">aflag</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">dupSFX</text:span>))<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>((<text:span text:style-name="T8">at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dupflags</text:span>[<text:span text:style-name="T8">aflag</text:span>]<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">dupPFX</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dupflags</text:span>[<text:span text:style-name="T8">aflag</text:span>]<text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">char</text:span>)((<text:span text:style-name="T8">at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;S&apos;</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">dupSFX</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">dupPFX</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">3</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">cross</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">product</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indicator</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;Y&apos;</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">ff</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeXPRODUCT</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">4</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affentries</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">numents</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">numents</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">numeric_limits</text:span>&lt;<text:span text:style-name="T4">size_t</text:span>&gt;::<text:span text:style-name="T5">max</text:span>()<text:span text:style-name="T2"> </text:span>/</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="32"/></text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T4">AffEntry</text:span>))<text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">static_cast</text:span>&lt;<text:span text:style-name="T4">size_t</text:span>&gt;(<text:span text:style-name="T8">numents</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">err</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">encode_flag</text:span>(<text:span text:style-name="T8">aflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">err</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">err</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">opts</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ff</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">opts</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeUTF8</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">is_aliasf</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">opts</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeALIASF</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">is_aliasm</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">opts</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeALIASM</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">initialize</text:span>(<text:span text:style-name="T8">numents</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">opts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aflag</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">make</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sure</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parsed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">enough</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pieces</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">err</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">encode_flag</text:span>(<text:span text:style-name="T8">aflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">err</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">err</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numents</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affentries</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">AffEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">first_entry</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ent</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ent</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">numents</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">ent</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">split</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">into</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pieces</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">type</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ent</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">add_entry</text:span>((<text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T3">aeXPRODUCT</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeUTF8</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeALIASF</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">aeALIASM</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">char</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flag</text:span>(<text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>())<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aflag</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">err</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">encode_flag</text:span>(<text:span text:style-name="T8">aflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">err</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%s</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">err</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">err</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ent</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">AffEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_entry</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">first_entry</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">aflag</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_entry</text:span>-&gt;<text:span text:style-name="T9">aflag</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">3</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">strip</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">null</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword_utf(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T1">&quot;0&quot;</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">4</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">null</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">morphcode</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclass</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclasslen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dash</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;/&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dash</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dash</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dash_str</text:span>(<text:span text:style-name="T8">dash</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">ignorechars</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">remove_ignored_chars_utf</text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars_utf16</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">remove_ignored_chars</text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword_utf(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">is_aliasf</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">dash_str</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclasslen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">get_aliasf</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span><text:span text:style-name="T8">index</text:span>,<text:span text:style-name="T2"> </text:span>&amp;(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclass</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclasslen</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="33"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">alias:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">\&quot;%s\&quot;\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="33"/></text:span><text:span text:style-name="T8">dash_str</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclasslen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">decode_flags</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="18"/></text:span>&amp;(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclass</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dash_str</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">sort</text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclass</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclass</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclasslen</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">havecontclass</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">_i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">_i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclasslen</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">_i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T9">contclasses</text:span>[(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">contclass</text:span>)[<text:span text:style-name="T8">_i</text:span>]]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">ignorechars</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">remove_ignored_chars_utf</text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars_utf16</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T5">remove_ignored_chars</text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword_utf(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T1">&quot;0&quot;</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">appnd</text:span>.<text:span text:style-name="T5">clear</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">piece</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">5</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">descriptions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword_utf(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">reverse_condition</text:span>(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;.&quot;</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T5">redundant_condition</text:span>(<text:span text:style-name="T8">at</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">strip</text:span>.<text:span text:style-name="T5">size</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>(),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">chunk</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;.&quot;</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;S&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>reverseword(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">reverse_condition</text:span>(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">encodeit</text:span>(*<text:span text:style-name="T8">entry</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>()))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">is_aliasm</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">morphcode</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">get_aliasm</text:span>(<text:span text:style-name="T8">index</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">me</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morph.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">gen.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword_utf(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span>reverseword(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remaining</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">iter</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">morphcode</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">entry</text:span>-&gt;<text:span text:style-name="T9">morphcode</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">i</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">check</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">make</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">sure</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parsed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">enough</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pieces</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">err</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">pHMgr</text:span>-&gt;<text:span text:style-name="T5">encode_flag</text:span>(<text:span text:style-name="T8">aflag</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">err</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%s</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">err</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">err</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifdef</text:span><text:span text:style-name="T2"> </text:span>DEBUG</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">detect</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">unnecessary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fields,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">excepting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">comments</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(basefieldnum)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span>fieldnum<text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>!(entry-&gt;morphcode)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span>((*(entry-&gt;morphcode)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;#&apos;</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(fieldnum<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span>basefieldnum)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>HUNSPELL_WARNING(stderr,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;warning:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">field</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span>af-&gt;getlinenum());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>basefieldnum<text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>!(entry-&gt;morphcode)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span>((*(entry-&gt;morphcode)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;#&apos;</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">create</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SfxEntry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PfxEntry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">objects</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">links</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">build</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ordered</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(sorted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">AffEntry</text:span>*&gt;::<text:span text:style-name="T4">iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">AffEntry</text:span>*&gt;::<text:span text:style-name="T4">iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">end</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">AffEntry</text:span>*&gt;::<text:span text:style-name="T4">iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentry</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affentry</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">affentry</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">at</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">build_pfxtree</text:span>(<text:span text:style-name="T7">static_cast</text:span>&lt;<text:span text:style-name="T4">PfxEntry</text:span>*&gt;(*<text:span text:style-name="T8">affentry</text:span>));</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">build_sfxtree</text:span>(<text:span text:style-name="T7">static_cast</text:span>&lt;<text:span text:style-name="T4">SfxEntry</text:span>*&gt;(*<text:span text:style-name="T8">affentry</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//contents</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">belong</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AffixMgr</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">affentries</text:span>.<text:span text:style-name="T5">release</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">redundant_condition</text:span>(<text:span text:style-name="T7">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ft</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">strip</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stripl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="34"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">linenum</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strlen</text:span>(<text:span text:style-name="T8">cond</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">neg</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ft</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;P&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">prefix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strncmp</text:span>(<text:span text:style-name="T8">strip</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stripl</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span>);<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">strip</text:span>[<text:span text:style-name="T8">i</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;warning:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incompatible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stripping</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">linenum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;^&apos;</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">in</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">j</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">strip</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>])</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">in</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">condl</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">condl</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">]</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition:\n%s\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">linenum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((!<text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">in</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="Preformatted_20_Text"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;warning:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incompatible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stripping</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">linenum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffix</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">stripl</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">strip</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stripl</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stripl</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">condl</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>);<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>--,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>--)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;]&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">strip</text:span>[<text:span text:style-name="T8">i</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;warning:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incompatible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stripping</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">linenum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">in</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">do</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">j</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">strip</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>])</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span><text:span text:style-name="T8">in</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;[&apos;</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">]</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition:\n%s\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">linenum</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">cond</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">cond</text:span>[<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;^&apos;</text:span>)<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((!<text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T8">in</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">neg</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;warning:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">incompatible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">stripping</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T1">&quot;characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">linenum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">AffixMgr</text:span>::<text:span text:style-name="T6">get_suffix_words</text:span>(<text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">suff</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="31"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">root_word</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">slst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">suff</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">SETSIZE</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">SfxEntry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">sStart</text:span>[<text:span text:style-name="T8">j</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">suff</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_ptr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((*<text:span text:style-name="T8">suff</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getFlag</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nw</text:span>(<text:span text:style-name="T8">root_word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">nw</text:span>.<text:span text:style-name="T5">append</text:span>(<text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getAffix</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ht</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">checkword</text:span>(<text:span text:style-name="T8">nw</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nw</text:span>.<text:span text:style-name="T5">size</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ht</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">slst</text:span>.<text:span text:style-name="T5">push_back</text:span>(<text:span text:style-name="T8">nw</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">suff</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ptr</text:span>-&gt;<text:span text:style-name="T5">getNext</text:span>();</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">slst</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
  </office:text>
 </office:body>
</office:document>