<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:officeooo="http://openoffice.org/2009/office" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.text">
 <office:meta><meta:creation-date>2018-02-06T13:48:16.631006641</meta:creation-date><meta:generator>LibreOffice/5.4.2.2$Linux_X86_64 LibreOffice_project/40m0$Build-2</meta:generator><dc:date>2018-02-06T13:55:47.642444373</dc:date><meta:editing-duration>PT7M29S</meta:editing-duration><meta:editing-cycles>3</meta:editing-cycles><meta:document-statistic meta:table-count="0" meta:image-count="0" meta:object-count="0" meta:page-count="20" meta:paragraph-count="1117" meta:word-count="4350" meta:character-count="34005" meta:non-whitespace-character-count="24480"/></office:meta>
 <office:settings>
  <config:config-item-set config:name="ooo:view-settings">
   <config:config-item config:name="ViewAreaTop" config:type="long">333012</config:config-item>
   <config:config-item config:name="ViewAreaLeft" config:type="long">0</config:config-item>
   <config:config-item config:name="ViewAreaWidth" config:type="long">49108</config:config-item>
   <config:config-item config:name="ViewAreaHeight" config:type="long">23232</config:config-item>
   <config:config-item config:name="ShowRedlineChanges" config:type="boolean">true</config:config-item>
   <config:config-item config:name="InBrowseMode" config:type="boolean">false</config:config-item>
   <config:config-item-map-indexed config:name="Views">
    <config:config-item-map-entry>
     <config:config-item config:name="ViewId" config:type="string">view2</config:config-item>
     <config:config-item config:name="ViewLeft" config:type="long">16265</config:config-item>
     <config:config-item config:name="ViewTop" config:type="long">339921</config:config-item>
     <config:config-item config:name="VisibleLeft" config:type="long">0</config:config-item>
     <config:config-item config:name="VisibleTop" config:type="long">333012</config:config-item>
     <config:config-item config:name="VisibleRight" config:type="long">49107</config:config-item>
     <config:config-item config:name="VisibleBottom" config:type="long">356242</config:config-item>
     <config:config-item config:name="ZoomType" config:type="short">0</config:config-item>
     <config:config-item config:name="ViewLayoutColumns" config:type="short">1</config:config-item>
     <config:config-item config:name="ViewLayoutBookMode" config:type="boolean">false</config:config-item>
     <config:config-item config:name="ZoomFactor" config:type="short">100</config:config-item>
     <config:config-item config:name="IsSelectedFrame" config:type="boolean">false</config:config-item>
     <config:config-item config:name="AnchoredTextOverflowLegacy" config:type="boolean">false</config:config-item>
    </config:config-item-map-entry>
   </config:config-item-map-indexed>
  </config:config-item-set>
  <config:config-item-set config:name="ooo:configuration-settings">
   <config:config-item config:name="PrintPaperFromSetup" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintFaxName" config:type="string"/>
   <config:config-item config:name="PrintSingleJobs" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintProspectRTL" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintProspect" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintReversed" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintTextPlaceholder" config:type="boolean">false</config:config-item>
   <config:config-item config:name="DoNotJustifyLinesWithManualBreak" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AlignTabStopPosition" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintLeftPages" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IgnoreFirstLineIndentInNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterSetup" config:type="base64Binary"/>
   <config:config-item config:name="CollapseEmptyCellPara" config:type="boolean">true</config:config-item>
   <config:config-item config:name="RedlineProtectionKey" config:type="base64Binary"/>
   <config:config-item config:name="UseOldPrinterMetrics" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UseOldNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AddExternalLeading" config:type="boolean">true</config:config-item>
   <config:config-item config:name="TreatSingleColumnBreakAsPageBreak" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UpdateFromTemplate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IsLabelDocument" config:type="boolean">false</config:config-item>
   <config:config-item config:name="RsidRoot" config:type="int">1059857</config:config-item>
   <config:config-item config:name="ConsiderTextWrapOnObjPos" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TableRowKeep" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TabsRelativeToIndent" config:type="boolean">true</config:config-item>
   <config:config-item config:name="SaveVersionOnClose" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UseFormerTextWrapping" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ChartAutoUpdate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AddParaTableSpacingAtStart" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintTables" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AllowPrintJobCancel" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AddParaTableSpacing" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintDrawings" config:type="boolean">true</config:config-item>
   <config:config-item config:name="AddParaSpacingToTableCells" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UseFormerLineSpacing" config:type="boolean">false</config:config-item>
   <config:config-item config:name="OutlineLevelYieldsNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LinkUpdateMode" config:type="short">1</config:config-item>
   <config:config-item config:name="DoNotResetParaAttrsForNumFont" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ApplyUserData" config:type="boolean">true</config:config-item>
   <config:config-item config:name="StylesNoDefault" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbeddedDatabaseName" config:type="string"/>
   <config:config-item config:name="FloattableNomargins" config:type="boolean">false</config:config-item>
   <config:config-item config:name="BackgroundParaOverDrawings" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintBlackFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterName" config:type="string"/>
   <config:config-item config:name="UseFormerObjectPositioning" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TabOverMargin" config:type="boolean">false</config:config-item>
   <config:config-item config:name="SaveGlobalDocumentLinks" config:type="boolean">false</config:config-item>
   <config:config-item config:name="CurrentDatabaseDataSource" config:type="string"/>
   <config:config-item config:name="IsKernAsianPunctuation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="CharacterCompressionType" config:type="short">0</config:config-item>
   <config:config-item config:name="SmallCapsPercentage66" config:type="boolean">false</config:config-item>
   <config:config-item config:name="CurrentDatabaseCommand" config:type="string"/>
   <config:config-item config:name="CurrentDatabaseCommandType" config:type="int">0</config:config-item>
   <config:config-item config:name="FieldAutoUpdate" config:type="boolean">true</config:config-item>
   <config:config-item config:name="IgnoreTabsAndBlanksForLineCalculation" config:type="boolean">false</config:config-item>
   <config:config-item config:name="LoadReadonly" config:type="boolean">false</config:config-item>
   <config:config-item config:name="DoNotCaptureDrawObjsOnPage" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ClipAsCharacterAnchoredWriterFlyFrames" config:type="boolean">false</config:config-item>
   <config:config-item config:name="SurroundTextWrapSmall" config:type="boolean">false</config:config-item>
   <config:config-item config:name="UnxForceZeroExtLeading" config:type="boolean">false</config:config-item>
   <config:config-item config:name="TabAtLeftIndentForParagraphsInList" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintRightPages" config:type="boolean">true</config:config-item>
   <config:config-item config:name="Rsid" config:type="int">1059857</config:config-item>
   <config:config-item config:name="MathBaselineAlignment" config:type="boolean">true</config:config-item>
   <config:config-item config:name="MsWordCompTrailingBlanks" config:type="boolean">false</config:config-item>
   <config:config-item config:name="InvertBorderSpacing" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrinterIndependentLayout" config:type="string">high-resolution</config:config-item>
   <config:config-item config:name="TabOverflow" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintGraphics" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PropLineSpacingShrinksFirstLine" config:type="boolean">true</config:config-item>
   <config:config-item config:name="UnbreakableNumberings" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AddFrameOffsets" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ClippedPictures" config:type="boolean">false</config:config-item>
   <config:config-item config:name="EmbedSystemFonts" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ApplyParagraphMarkFormatToNumbering" config:type="boolean">false</config:config-item>
   <config:config-item config:name="SubtractFlysAnchoredAtFlys" config:type="boolean">false</config:config-item>
   <config:config-item config:name="AddVerticalFrameOffsets" config:type="boolean">false</config:config-item>
   <config:config-item config:name="ProtectForm" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintEmptyPages" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintControls" config:type="boolean">true</config:config-item>
   <config:config-item config:name="PrintHiddenText" config:type="boolean">false</config:config-item>
   <config:config-item config:name="PrintAnnotationMode" config:type="short">0</config:config-item>
   <config:config-item config:name="PrintPageBackground" config:type="boolean">true</config:config-item>
  </config:config-item-set>
 </office:settings>
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink"/>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Noto Sans Devanagari1" svg:font-family="&apos;Noto Sans Devanagari&apos;" style:font-family-generic="swiss"/>
  <style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed"/>
  <style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="Noto Sans CJK SC Regular" svg:font-family="&apos;Noto Sans CJK SC Regular&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Noto Sans Devanagari" svg:font-family="&apos;Noto Sans Devanagari&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:styles>
  <style:default-style style:family="graphic">
   <style:graphic-properties svg:stroke-color="#3465a4" draw:fill-color="#729fcf" fo:wrap-option="no-wrap" draw:shadow-offset-x="0.1181in" draw:shadow-offset-y="0.1181in" draw:start-line-spacing-horizontal="0.1114in" draw:start-line-spacing-vertical="0.1114in" draw:end-line-spacing-horizontal="0.1114in" draw:end-line-spacing-vertical="0.1114in" style:flow-with-text="false"/>
   <style:paragraph-properties style:text-autospace="ideograph-alpha" style:line-break="strict" style:font-independent-line-spacing="false">
    <style:tab-stops/>
   </style:paragraph-properties>
   <style:text-properties style:use-window-font-color="true" style:font-name="Times New Roman" fo:font-size="12pt" fo:language="zxx" fo:country="none" style:letter-kerning="true" style:font-name-asian="Noto Sans CJK SC Regular" style:font-size-asian="10.5pt" style:language-asian="zxx" style:country-asian="none" style:font-name-complex="Noto Sans Devanagari" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none"/>
  </style:default-style>
  <style:default-style style:family="paragraph">
   <style:paragraph-properties fo:orphans="2" fo:widows="2" fo:hyphenation-ladder-count="no-limit" style:text-autospace="ideograph-alpha" style:punctuation-wrap="hanging" style:line-break="strict" style:tab-stop-distance="0.4925in" style:writing-mode="page"/>
   <style:text-properties style:use-window-font-color="true" style:font-name="Times New Roman" fo:font-size="12pt" fo:language="zxx" fo:country="none" style:letter-kerning="true" style:font-name-asian="Noto Sans CJK SC Regular" style:font-size-asian="10.5pt" style:language-asian="zxx" style:country-asian="none" style:font-name-complex="Noto Sans Devanagari" style:font-size-complex="12pt" style:language-complex="zxx" style:country-complex="none" fo:hyphenate="false" fo:hyphenation-remain-char-count="2" fo:hyphenation-push-char-count="2"/>
  </style:default-style>
  <style:default-style style:family="table">
   <style:table-properties table:border-model="collapsing"/>
  </style:default-style>
  <style:default-style style:family="table-row">
   <style:table-row-properties fo:keep-together="auto"/>
  </style:default-style>
  <style:style style:name="Standard" style:family="paragraph" style:class="text"/>
  <style:style style:name="Heading" style:family="paragraph" style:parent-style-name="Standard" style:next-style-name="Text_20_body" style:class="text">
   <style:paragraph-properties fo:margin-top="0.1665in" fo:margin-bottom="0.0835in" loext:contextual-spacing="false" fo:keep-with-next="always"/>
   <style:text-properties style:font-name="Arial" fo:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable" fo:font-size="14pt" style:font-name-asian="Noto Sans CJK SC Regular" style:font-family-asian="&apos;Noto Sans CJK SC Regular&apos;" style:font-family-generic-asian="system" style:font-pitch-asian="variable" style:font-size-asian="14pt" style:font-name-complex="Noto Sans Devanagari" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="system" style:font-pitch-complex="variable" style:font-size-complex="14pt"/>
  </style:style>
  <style:style style:name="Text_20_body" style:display-name="Text body" style:family="paragraph" style:parent-style-name="Standard" style:class="text">
   <style:paragraph-properties fo:margin-top="0in" fo:margin-bottom="0.0972in" loext:contextual-spacing="false" fo:line-height="120%"/>
  </style:style>
  <style:style style:name="List" style:family="paragraph" style:parent-style-name="Text_20_body" style:class="list">
   <style:text-properties style:font-size-asian="12pt" style:font-name-complex="Noto Sans Devanagari1" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="swiss"/>
  </style:style>
  <style:style style:name="Caption" style:family="paragraph" style:parent-style-name="Standard" style:class="extra">
   <style:paragraph-properties fo:margin-top="0.0835in" fo:margin-bottom="0.0835in" loext:contextual-spacing="false" text:number-lines="false" text:line-number="0"/>
   <style:text-properties fo:font-size="12pt" fo:font-style="italic" style:font-size-asian="12pt" style:font-style-asian="italic" style:font-name-complex="Noto Sans Devanagari1" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="swiss" style:font-size-complex="12pt" style:font-style-complex="italic"/>
  </style:style>
  <style:style style:name="Index" style:family="paragraph" style:parent-style-name="Standard" style:class="index">
   <style:paragraph-properties text:number-lines="false" text:line-number="0"/>
   <style:text-properties style:font-size-asian="12pt" style:font-name-complex="Noto Sans Devanagari1" style:font-family-complex="&apos;Noto Sans Devanagari&apos;" style:font-family-generic-complex="swiss"/>
  </style:style>
  <style:style style:name="Preformatted_20_Text" style:display-name="Preformatted Text" style:family="paragraph" style:parent-style-name="Standard" style:class="html">
   <style:paragraph-properties fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false"/>
   <style:text-properties style:font-name="Courier New" fo:font-family="&apos;Courier New&apos;" style:font-family-generic="modern" style:font-pitch="fixed" fo:font-size="10pt" style:font-name-asian="Courier New" style:font-family-asian="&apos;Courier New&apos;" style:font-family-generic-asian="modern" style:font-pitch-asian="fixed" style:font-size-asian="10pt" style:font-name-complex="Courier New" style:font-family-complex="&apos;Courier New&apos;" style:font-family-generic-complex="modern" style:font-pitch-complex="fixed" style:font-size-complex="10pt"/>
  </style:style>
  <style:style style:name="Footer" style:family="paragraph" style:parent-style-name="Standard" style:class="extra">
   <style:paragraph-properties text:number-lines="false" text:line-number="0">
    <style:tab-stops>
     <style:tab-stop style:position="3.3465in" style:type="center"/>
     <style:tab-stop style:position="6.6929in" style:type="right"/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="Header" style:family="paragraph" style:parent-style-name="Standard" style:class="extra">
   <style:paragraph-properties text:number-lines="false" text:line-number="0">
    <style:tab-stops>
     <style:tab-stop style:position="3.3465in" style:type="center"/>
     <style:tab-stop style:position="6.6929in" style:type="right"/>
    </style:tab-stops>
   </style:paragraph-properties>
  </style:style>
  <style:style style:name="Line_20_numbering" style:display-name="Line numbering" style:family="text"/>
  <text:outline-style style:name="Outline">
   <text:outline-level-style text:level="1" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="2" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="3" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="4" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="5" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="6" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="7" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="8" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="9" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
   <text:outline-level-style text:level="10" style:num-format="">
    <style:list-level-properties text:list-level-position-and-space-mode="label-alignment">
     <style:list-level-label-alignment text:label-followed-by="listtab"/>
    </style:list-level-properties>
   </text:outline-level-style>
  </text:outline-style>
  <text:notes-configuration text:note-class="footnote" style:num-format="1" text:start-value="0" text:footnotes-position="page" text:start-numbering-at="document"/>
  <text:notes-configuration text:note-class="endnote" style:num-format="i" text:start-value="0"/>
  <text:linenumbering-configuration text:style-name="Line_20_numbering" text:offset="0.1965in" style:num-format="1" text:number-position="left" text:increment="1"/>
 </office:styles>
 <office:automatic-styles>
  <style:style style:name="P1" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0.1965in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
  </style:style>
  <style:style style:name="P2" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0.1965in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties fo:color="#000080"/>
  </style:style>
  <style:style style:name="P3" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
  </style:style>
  <style:style style:name="P4" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties fo:color="#008000"/>
  </style:style>
  <style:style style:name="P5" style:family="paragraph" style:parent-style-name="Preformatted_20_Text">
   <style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-indent="0in" style:auto-text-indent="false"/>
   <style:text-properties fo:color="#000080"/>
  </style:style>
  <style:style style:name="T1" style:family="text">
   <style:text-properties fo:color="#008000"/>
  </style:style>
  <style:style style:name="T2" style:family="text">
   <style:text-properties fo:color="#c0c0c0"/>
  </style:style>
  <style:style style:name="T3" style:family="text">
   <style:text-properties fo:color="#000080"/>
  </style:style>
  <style:style style:name="T4" style:family="text">
   <style:text-properties fo:color="#800080"/>
  </style:style>
  <style:style style:name="T5" style:family="text">
   <style:text-properties fo:color="#00677c"/>
  </style:style>
  <style:style style:name="T6" style:family="text">
   <style:text-properties fo:color="#00677c" fo:font-weight="bold"/>
  </style:style>
  <style:style style:name="T7" style:family="text">
   <style:text-properties fo:color="#808000"/>
  </style:style>
  <style:style style:name="T8" style:family="text">
   <style:text-properties fo:color="#092e64"/>
  </style:style>
  <style:style style:name="T9" style:family="text">
   <style:text-properties fo:color="#800000"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties fo:page-width="8.2681in" fo:page-height="11.6929in" style:num-format="1" style:print-orientation="portrait" fo:margin-top="0.7874in" fo:margin-bottom="0.7874in" fo:margin-left="0.7874in" fo:margin-right="0.7874in" style:writing-mode="lr-tb" style:footnote-max-height="0in">
    <style:footnote-sep style:width="0.0071in" style:distance-before-sep="0.0398in" style:distance-after-sep="0.0398in" style:line-style="solid" style:adjustment="left" style:rel-width="25%" style:color="#000000"/>
   </style:page-layout-properties>
   <style:header-style/>
   <style:footer-style/>
  </style:page-layout>
  <style:page-layout style:name="pm2">
   <style:page-layout-properties fo:page-width="8.2681in" fo:page-height="11.6929in" style:num-format="1" style:print-orientation="portrait" fo:margin-top="0.3937in" fo:margin-bottom="0.3937in" fo:margin-left="0.7874in" fo:margin-right="0.3937in" style:writing-mode="lr-tb" style:footnote-max-height="0in">
    <style:footnote-sep style:width="0.0071in" style:distance-before-sep="0.0398in" style:distance-after-sep="0.0398in" style:line-style="solid" style:adjustment="left" style:rel-width="25%" style:color="#000000"/>
   </style:page-layout-properties>
   <style:header-style/>
   <style:footer-style/>
  </style:page-layout>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Standard" style:page-layout-name="pm1"/>
  <style:master-page style:name="HTML" style:page-layout-name="pm2"/>
 </office:master-styles>
 <office:body>
  <office:text text:use-soft-page-breaks="true">
   <text:sequence-decls>
    <text:sequence-decl text:display-outline-level="0" text:name="Illustration"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Table"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Text"/>
    <text:sequence-decl text:display-outline-level="0" text:name="Drawing"/>
   </text:sequence-decls>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BEGIN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LICENSE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BLOCK</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1.1/GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.0/LGPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.1</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Copyright</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(C)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2002-2017</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Németh</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">László</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">The</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">contents</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">subject</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Mozilla</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Public</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1.1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;License&quot;);</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">except</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">compliance</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">You</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">obtain</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">copy</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">http://www.mozilla.org/MPL/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Software</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distributed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distributed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IS&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">basis,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WITHOUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WARRANTY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">KIND,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">either</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">express</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">implied.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">See</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">specific</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">language</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">governing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rights</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">limitations</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hunspell</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">based</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MySpell</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">which</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Copyright</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(C)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2002</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Kevin</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hendricks.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Contributor(s):</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">David</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Einstein,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Davide</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Prina,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Giuseppe</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Modugno,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Gianluca</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Turconi,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Simon</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Brouwer,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Noll</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">János,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Bíró</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Árpád,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Goldman</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Eleonóra,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Sarlós</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Tamás,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Bencsáth</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Boldizsár,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Halácsy</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Péter,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Dvornik</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">László,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Gefferth</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">András,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Nagy</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Viktor,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Varga</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Dániel,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Chris</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Halls,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Rene</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Engelhard,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Bram</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Moolenaar,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Dafydd</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Jones,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Harri</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Pitkänen</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Alternatively,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">contents</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">used</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">either</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GNU</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">General</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Public</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">later</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;GPL&quot;),</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GNU</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Lesser</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">General</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Public</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">License</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">later</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;LGPL&quot;),</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">which</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">applicable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">instead</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">those</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">If</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wish</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">only</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">either</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allow</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">others</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MPL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indicate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">decision</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">deleting</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">replace</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">them</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">notice</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">other</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">required</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">If</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">you</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">do</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">delete</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provisions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">recipient</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">may</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">your</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">version</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">under</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">terms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">any</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MPL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GPL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LGPL.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">END</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LICENSE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BLOCK</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*****</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P4">/*</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Copyright</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2002</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Kevin</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">B.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Hendricks,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Stratford,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Ontario,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Canada</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">And</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Contributors.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">All</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rights</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reserved.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Redistribution</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">use</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">without</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modification,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">permitted</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provided</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">are</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">met:</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Redistributions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">retain</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">copyright</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">notice,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">disclaimer.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Redistributions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">form</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reproduce</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">above</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">copyright</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">notice,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">this</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">conditions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">disclaimer</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">documentation</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and/or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">other</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">materials</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provided</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distribution.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">3.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">All</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modifications</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clearly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">marked</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">such.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">Binary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">redistributions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">based</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">source</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">code</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">must</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">be</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">clearly</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">marked</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">as</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modified</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">versions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">documentation</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> <text:s text:c="3"/></text:span><text:span text:style-name="T1">and/or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">other</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">materials</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">provided</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">distribution.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THIS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SOFTWARE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PROVIDED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">KEVIN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">B.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">HENDRICKS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONTRIBUTORS</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">``AS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IS&apos;&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EXPRESS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IMPLIED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WARRANTIES,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INCLUDING,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NOT</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIMITED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TO,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IMPLIED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WARRANTIES</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">MERCHANTABILITY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FITNESS</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FOR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">A</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PARTICULAR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PURPOSE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ARE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DISCLAIMED.</text:span><text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">IN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NO</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EVENT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SHALL</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">KEVIN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">B.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">HENDRICKS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONTRIBUTORS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIABLE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FOR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DIRECT,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INDIRECT,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INCIDENTAL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SPECIAL,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EXEMPLARY,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONSEQUENTIAL</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DAMAGES</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(INCLUDING,</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NOT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIMITED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TO,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PROCUREMENT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SUBSTITUTE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">GOODS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SERVICES;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LOSS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">USE,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DATA,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">PROFITS;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">BUSINESS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">INTERRUPTION)</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">HOWEVER</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CAUSED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">AND</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ON</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THEORY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIABILITY,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WHETHER</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CONTRACT,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">STRICT</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">LIABILITY,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">TORT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(INCLUDING</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NEGLIGENCE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OR</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OTHERWISE)</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ARISING</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ANY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">WAY</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OUT</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">USE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THIS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SOFTWARE,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">EVEN</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">IF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ADVISED</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">THE</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">POSSIBILITY</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OF</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">SUCH</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">DAMAGE.</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s/></text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;stdlib.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;string.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;stdio.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;ctype.h&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;limits&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;sstream&gt;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&lt;iomanip&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Only</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">here</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">logging.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Normally</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">an</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">empty</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;hashmgr.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;csutil.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T3">#include</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;atypes.hxx&quot;</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">build</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">from</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">munched</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">HashMgr</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">apath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tablesize</text:span>(<text:span text:style-name="T3">0</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">tableptr</text:span>(<text:span text:style-name="T3">NULL</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">flag_mode</text:span>(<text:span text:style-name="T4">FLAG_CHAR</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">complexprefixes</text:span>(<text:span text:style-name="T3">0</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">utf8</text:span>(<text:span text:style-name="T3">0</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">forbiddenword</text:span>(<text:span text:style-name="T3">FORBIDDENWORD</text:span>)<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">numaliasf</text:span>(<text:span text:style-name="T3">0</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasf</text:span>(<text:span text:style-name="T3">NULL</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasflen</text:span>(<text:span text:style-name="T3">0</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">numaliasm</text:span>(<text:span text:style-name="T3">0</text:span>),</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasm</text:span>(<text:span text:style-name="T3">NULL</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">csconv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">load_config</text:span>(<text:span text:style-name="T8">apath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ec</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">load_tables</text:span>(<text:span text:style-name="T8">tpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ec</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">error</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">condition</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">what</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">should</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">we</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">do</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">here</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;Hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Manager</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Error</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d\n&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ec</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">tableptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//keep</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">tablesize</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">possible</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">division</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">zero</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">tableptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>**)<text:span text:style-name="T5">calloc</text:span>(<text:span text:style-name="T9">tablesize</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">tableptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">true</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">this</text:span>-&gt;<text:span text:style-name="T5">log</text:span>(<text:span text:style-name="T8">apath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">false</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">disable</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">logging.</text:span></text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T4">HashMgr</text:span>::~<text:span text:style-name="T4">HashMgr</text:span>()<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">tableptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pass</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">freeing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">up</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">everything</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">go</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">column</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">column</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tablesize</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tableptr</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pt</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">nt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pt</text:span>-&gt;<text:span text:style-name="T9">next</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">pt</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(!<text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">pt</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">pt</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>)))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">pt</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">pt</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">pt</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nt</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">tableptr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasf</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">numaliasf</text:span>);<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">j</text:span>]);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasf</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasflen</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasflen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasm</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">numaliasm</text:span>);<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasm</text:span>[<text:span text:style-name="T8">j</text:span>]);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasm</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifndef</text:span><text:span text:style-name="T2"> </text:span>OPENOFFICEORG</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifndef</text:span><text:span text:style-name="T2"> </text:span>MOZILLA_CLIENT</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free_utf_tbl</text:span>();</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P2">#endif</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifdef</text:span><text:span text:style-name="T2"> </text:span>MOZILLA_CLIENT</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span>[]<text:span text:style-name="T2"> </text:span>csconv;</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lookup</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">root</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hashtable</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">lookup</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">tableptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tableptr</text:span>[<text:span text:style-name="T5">hash</text:span>(<text:span text:style-name="T8">word</text:span>)];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">dp</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">word</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(private)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">add_word</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aff</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_desc</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">onlyupcase</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">in_word</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">in_desc</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">word_copy</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">desc_copy</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">ignorechars</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">word_copy</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">in_word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">ignorechars</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">wcl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">remove_ignored_chars_utf</text:span>(*<text:span text:style-name="T8">word_copy</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars_utf16</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">remove_ignored_chars</text:span>(*<text:span text:style-name="T8">word_copy</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">wcl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>reverseword_utf(*<text:span text:style-name="T8">word_copy</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>reverseword(*<text:span text:style-name="T8">word_copy</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">in_desc</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">aliasm</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">desc_copy</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(*<text:span text:style-name="T8">in_desc</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>reverseword_utf(*<text:span text:style-name="T8">desc_copy</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>reverseword(*<text:span text:style-name="T8">desc_copy</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">desc</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word_copy</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">upcasehomonym</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">descl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc</text:span>-&gt;<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">variable-length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">record</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">optional</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fields</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>)<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>-&gt;<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">descl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">hp</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hpw</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">word</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">strcpy</text:span>(<text:span text:style-name="T8">hpw</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>-&gt;<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">hash</text:span>(<text:span text:style-name="T8">hpw</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">blen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">word</text:span>-&gt;<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">clen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">wcl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">al</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">aff</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">next</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">store</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">description</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">its</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">pointer</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">desc</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">var</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">H_OPT</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasm</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">var</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">H_OPT_ALIASM</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">store_pointer</text:span>(<text:span text:style-name="T8">hpw</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>-&gt;<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_aliasm</text:span>(<text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">desc</text:span>-&gt;<text:span text:style-name="T5">c_str</text:span>())));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">strcpy</text:span>(<text:span text:style-name="T8">hpw</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>-&gt;<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc</text:span>-&gt;<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strstr</text:span>(<text:span text:style-name="T5">HENTRY_DATA</text:span>(<text:span text:style-name="T8">hp</text:span>),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">MORPH_PHON</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">var</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">H_OPT_PHON</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">var</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tableptr</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">dp</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">tableptr</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((!<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">word</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlyupcase</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">onlyupcase</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">hp</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">upcasehomonym</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">strcmp</text:span>(<text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">word</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlyupcase</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">onlyupcase</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">hp</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">upcasehomonym</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">upcasehomonym</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">onlyupcase</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">homonym</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">hp</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">desc_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word_copy</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">add_hidden_capitalized_word</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flagslen</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="41"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">inner</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">capitalized</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">handle</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">following</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allcap</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forms:</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Mixed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">caps:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OpenOffice.org</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">OPENOFFICE.ORG</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Allcaps</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">suffixes:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CIA&apos;s</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">CIA&apos;S</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">captype</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">HUHCAP</text:span>)<text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">captype</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">HUHINITCAP</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="7"/></text:span>((<text:span text:style-name="T8">captype</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ALLCAP</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)))<text:span text:style-name="T2"> </text:span>&amp;&amp;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>!((<text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flagslen</text:span>)))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags2</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">flags2</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flagslen</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">memcpy</text:span>(<text:span text:style-name="T8">flags2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">flags2</text:span>[<text:span text:style-name="T8">flagslen</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ONLYUPCASEFLAG</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">mkallsmall_utf</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">mkinitcap_utf</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">u16_u8</text:span>(<text:span text:style-name="T8">st</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">add_word</text:span>(<text:span text:style-name="T8">st</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">new_word</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">mkallsmall</text:span>(<text:span text:style-name="T8">new_word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">csconv</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">mkinitcap</text:span>(<text:span text:style-name="T8">new_word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">csconv</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ret</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">add_word</text:span>(<text:span text:style-name="T8">new_word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flagslen</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ret</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">detect</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">captype</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modify</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">UTF-8</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">encoding</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">get_clen_and_captype</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">workbuf</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">workbuf</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">captype</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_captype_utf8</text:span>(<text:span text:style-name="T8">workbuf</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">langnum</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">captype</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_captype</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">csconv</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">get_clen_and_captype</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">int</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">workbuf</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_clen_and_captype</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">workbuf</text:span>);</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(personal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">function</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">standalone</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">applications)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">remove</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">flags</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">sort</text:span>(<text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">personal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">remove_forbidden_flag</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">word</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">dp</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">TESTAFF</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">personal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dic.</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags2</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">flags2</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">forbiddenword</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">flags2</text:span>[<text:span text:style-name="T8">j</text:span>++]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>--;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags2</text:span>;<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">XXX</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allowed</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">forbidden</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">next_homonym</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">custom</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dic.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(public)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">add</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">remove_forbidden_flag</text:span>(<text:span text:style-name="T8">word</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_clen_and_captype</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">captype</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">add_word</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">add_hidden_capitalized_word</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="39"/></text:span><text:span text:style-name="T8">captype</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">add_with_affix</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">example</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">detect</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">captype</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">modify</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">length</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">UTF-8</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">encoding</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">lookup</text:span>(<text:span text:style-name="T8">example</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">remove_forbidden_flag</text:span>(<text:span text:style-name="T8">word</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_clen_and_captype</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">captype</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasf</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">add_word</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flags</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">memcpy</text:span>((<text:span text:style-name="T7">void</text:span>*)<text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">void</text:span>*)<text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="15"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">add_word</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">add_hidden_capitalized_word</text:span>(<text:span text:style-name="T8">word</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">astr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="39"/></text:span><text:span text:style-name="T8">dp</text:span>-&gt;<text:span text:style-name="T9">alen</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">walk</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">null</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">initialize:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">col=-1;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hp</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">NULL;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hp</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">=</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">walk_hashtable(&amp;col,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hp);</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">walk_hashtable</text:span>(<text:span text:style-name="T7">int</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">col</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">hp</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">next</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hp</text:span>-&gt;<text:span text:style-name="T9">next</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">col</text:span>++;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">col</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tablesize</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">col</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">tableptr</text:span>[<text:span text:style-name="T8">col</text:span>])</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tableptr</text:span>[<text:span text:style-name="T8">col</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">null</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">end</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">reset</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">start</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T8">col</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">load</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">munched</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">build</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">fly</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">load_tables</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">open</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dictionary</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>(<text:span text:style-name="T8">tpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dict</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">first</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">get</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">size</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">dict</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">ts</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">empty</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%s\n&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">tpath</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>mychomp(<text:span text:style-name="T8">ts</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">byte</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">order</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;\xEF\xBB\xBF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">erase</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nExtra</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">USERWORD</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>(<text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">numeric_limits</text:span>&lt;<text:span text:style-name="T7">int</text:span>&gt;::<text:span text:style-name="T5">max</text:span>()<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nExtra</text:span>)<text:span text:style-name="T2"> </text:span>/</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="24"/></text:span><text:span text:style-name="T7">int</text:span>(<text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*))))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">count</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">dic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>+=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nExtra</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T9">tablesize</text:span><text:span text:style-name="T2"> </text:span>%<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">tablesize</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allocate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T9">tableptr</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>**)<text:span text:style-name="T5">calloc</text:span>(<text:span text:style-name="T9">tablesize</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">struct</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">hentry</text:span>*));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">tableptr</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">loop</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">through</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">all</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">on</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">much</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">list</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">create</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">strings</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">workbuf</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dict</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">ts</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">ts</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">split</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">into</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morphological</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">description</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&apos;:&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp_pos</text:span>))<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ts</text:span>[<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>[<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\t&apos;</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>-=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ts</text:span>[<text:span text:style-name="T8">dp_pos</text:span>-<text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>[<text:span text:style-name="T8">dp_pos</text:span>-<text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\t&apos;</text:span>);<text:span text:style-name="T2"> </text:span>--<text:span text:style-name="T8">dp_pos</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>++<text:span text:style-name="T8">dp_pos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">dp_pos</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">tabulator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">old</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morphological</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">field</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">separator</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp2_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&apos;\t&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp2_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp2_pos</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp_pos</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp2_pos</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">dp</text:span>.<text:span text:style-name="T5">assign</text:span>(<text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T8">dp_pos</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T8">dp_pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">split</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">into</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">char</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">strings</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;\/&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">signs</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">slash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">words</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">separator)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;/&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">at</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">beginning</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">separator)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&apos;/&apos;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>++<text:span text:style-name="T8">ap_pos</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">continue</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ts</text:span>[<text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;\\&apos;</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">replace</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;\/&quot;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;/&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">erase</text:span>(<text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&apos;/&apos;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap_pos</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">size</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>(<text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">substr</text:span>(<text:span text:style-name="T8">ap_pos</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">ts</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T8">ap_pos</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasf</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">ap</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">al</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_aliasf</text:span>(<text:span text:style-name="T8">index</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">al</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">vector</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">alias\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">dict</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">al</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">decode_flags</text:span>(&amp;<text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ap</text:span>.<text:span text:style-name="T5">c_str</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">al</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;Can&apos;t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">allocate</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">memory.\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">sort</text:span>(<text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">al</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">flags</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_clen_and_captype</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">captype</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">workbuf</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">dp_str</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp</text:span>.<text:span text:style-name="T5">empty</text:span>()<text:span text:style-name="T2"> </text:span>?<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span><text:span text:style-name="T2"> </text:span>:<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">dp</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">word</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">its</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">index</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">plus</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">its</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">capitalized</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">form</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">optionally</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T5">add_word</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp_str</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">add_hidden_capitalized_word</text:span>(<text:span text:style-name="T8">ts</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">wcl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">al</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dp_str</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">captype</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">5</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dict</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">hash</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">function</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">simple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">load</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">rotate</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">algorithm</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">borrowed</text:span></text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">hash</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">word</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">long</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">hv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">hv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">hv</text:span><text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>|<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">word</text:span>++);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">word</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T3">ROTATE</text:span>(<text:span text:style-name="T8">hv</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">ROTATE_LEN</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">hv</text:span><text:span text:style-name="T2"> </text:span>^=<text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">word</text:span>++);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">long</text:span>)<text:span text:style-name="T8">hv</text:span><text:span text:style-name="T2"> </text:span>%<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">tablesize</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">decode_flags</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">result</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_LONG</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(1x2yZz</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1x</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2y</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Zz)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>%<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flagvector\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>/=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">result</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">result</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>(*<text:span text:style-name="T8">result</text:span>)[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>])<text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>+</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_NUM</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">decimal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numbers</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">separated</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">comma</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(4521,23,233</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">4521</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">23</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">233)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dest</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span>]<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;,&apos;</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">len</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">result</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">result</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">src</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">c_str</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">src</text:span>;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">p</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;,&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">src</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">too</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">large</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(max:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d)\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>*<text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wrong</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">src</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">dest</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">src</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">too</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">large</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(max:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d)\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wrong</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_UNI</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">UTF-8</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">result</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">result</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">memcpy</text:span>(*<text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">w</text:span>[<text:span text:style-name="T3">0</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">default</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Ispell&apos;s</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one-character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(erfg</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">e</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">r</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">f</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">g)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">dest</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>*<text:span text:style-name="T8">result</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!*<text:span text:style-name="T8">result</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">result</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>*<text:span text:style-name="T8">dest</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">dest</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">decode_flags</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>&gt;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">empty</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_LONG</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">two-character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(1x2yZz</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">1x</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">2y</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Zz)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>%<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flagvector\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>/=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>;<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>(((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>])<text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>+</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>]);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_NUM</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">decimal</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numbers</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">separated</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">by</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">comma</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(4521,23,233</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">4521</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="22"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">23</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">233)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">src</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">c_str</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">src</text:span>;<text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T8">p</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(*<text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&apos;,&apos;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">src</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">too</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">large</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(max:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d)\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="16"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">back</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wrong</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T8">src</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">p</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">src</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">too</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">large</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(max:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d)\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">i</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">back</text:span>()<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wrong</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_UNI</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">UTF-8</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">origsize</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">size</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">resize</text:span>(<text:span text:style-name="T8">origsize</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">memcpy</text:span>(&amp;<text:span text:style-name="T8">result</text:span>[<text:span text:style-name="T8">origsize</text:span>],<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">w</text:span>[<text:span text:style-name="T3">0</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">len</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">default</text:span>:<text:span text:style-name="T2"> </text:span>{<text:span text:style-name="T2"> <text:s/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Ispell&apos;s</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">one-character</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flags</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(erfg</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-&gt;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">e</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">r</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">f</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">g)</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">reserve</text:span>(<text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T4">size_t</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">flags</text:span>.<text:span text:style-name="T5">size</text:span>();<text:span text:style-name="T2"> </text:span>++<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">result</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">flags</text:span>[<text:span text:style-name="T8">i</text:span>]);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">decode_flag</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">f</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_LONG</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">f</text:span>[<text:span text:style-name="T3">0</text:span>])<text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)<text:span text:style-name="T8">f</text:span>[<text:span text:style-name="T3">1</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_NUM</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T8">f</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>&gt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">too</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">large</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(max:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d)\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">i</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">DEFAULTFLAGS</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_UNI</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">u8_u16</text:span>(<text:span text:style-name="T8">w</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">f</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">w</text:span>.<text:span text:style-name="T5">empty</text:span>())</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">memcpy</text:span>(&amp;<text:span text:style-name="T8">s</text:span>,<text:span text:style-name="T2"> </text:span>&amp;<text:span text:style-name="T8">w</text:span>[<text:span text:style-name="T3">0</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>*(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*)<text:span text:style-name="T8">f</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">s</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">0</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">wrong</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">id\n&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">s</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">encode_flag</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">f</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">f</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T1">&quot;(NULL)&quot;</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">ch</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_LONG</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ch</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">f</text:span><text:span text:style-name="T2"> </text:span>&gt;&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ch</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">f</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">f</text:span><text:span text:style-name="T2"> </text:span>&gt;&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)<text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">8</text:span>)));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_NUM</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">ostringstream</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stream</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">stream</text:span><text:span text:style-name="T2"> </text:span>&lt;&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">f</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ch</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">stream</text:span>.str();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_UNI</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">w_char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w_c</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">w_char</text:span>*)&amp;<text:span text:style-name="T8">f</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">vector</text:span>&lt;<text:span text:style-name="T4">w_char</text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>(<text:span text:style-name="T8">w_c</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w_c</text:span><text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">u16_u8</text:span>(<text:span text:style-name="T8">ch</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">w</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">ch</text:span>.<text:span text:style-name="T5">push_back</text:span>((<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>)(<text:span text:style-name="T8">f</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">ch</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">aff</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">and</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">set</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mode</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">load_config</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">firstline</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">open</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">new</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>(<text:span text:style-name="T8">affpath</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">key</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">afflst</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;Error</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">-</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">could</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">open</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">description</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%s\n&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">affpath</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">each</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ignoring</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">any</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">that</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">do</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">not</text:span></text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">start</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">with</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">a</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">known</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">type</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">indicator</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">line</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">line</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remove</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">byte</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">order</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">mark</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">firstline</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">firstline</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;\xEF\xBB\xBF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">erase</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">try</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;FLAG&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">isspace</text:span>(<text:span text:style-name="T8">line</text:span>[<text:span text:style-name="T3">4</text:span>]))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_CHAR</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T1">&quot;affix</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">file</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parameter\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="25"/></text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&quot;long&quot;</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_LONG</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&quot;num&quot;</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_NUM</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">find</text:span>(<text:span text:style-name="T1">&quot;UTF-8&quot;</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T9">npos</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_UNI</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">flag_mode</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FLAG_CHAR</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T3">stderr</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">FLAG</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">needs</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`num&apos;,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`long&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">or</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">`UTF-8&apos;</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parameter\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;FORBIDDENWORD&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">13</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">st</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">forbiddenword</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">decode_flag</text:span>(<text:span text:style-name="T8">st</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SET&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">enc</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">enc</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;UTF-8&quot;</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">utf8</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifndef</text:span><text:span text:style-name="T2"> </text:span>OPENOFFICEORG</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T3">#ifndef</text:span><text:span text:style-name="T2"> </text:span>MOZILLA_CLIENT</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T5">initialize_utf_tbl</text:span>();</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P5">#endif</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">csconv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_current_cs</text:span>(<text:span text:style-name="T9">enc</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;LANG&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">4</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_string</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">lang</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">langnum</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_lang_num</text:span>(<text:span text:style-name="T9">lang</text:span>);</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ignored</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">(for</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">example,</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">Arabic</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">optional</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">diacritics</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="5"/></text:span><text:span text:style-name="T1">*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">characters</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;IGNORE&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">6</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_array</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">ignorechars_utf16</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T9">utf8</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>()))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">isspace</text:span>(<text:span text:style-name="T8">line</text:span>[<text:span text:style-name="T3">2</text:span>]))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_aliasf</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AM&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">isspace</text:span>(<text:span text:style-name="T8">line</text:span>[<text:span text:style-name="T3">2</text:span>]))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T5">parse_aliasm</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">15</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;COMPLEXPREFIXES&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">15</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">complexprefixes</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(((<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;SFX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>||</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="9"/></text:span>(<text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T3">0</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;PFX&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span>)<text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>))<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">size</text:span>()<text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">3</text:span><text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">isspace</text:span>(<text:span text:style-name="T8">line</text:span>[<text:span text:style-name="T3">3</text:span>]))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">csconv</text:span><text:span text:style-name="T2"> </text:span>==<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">csconv</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">get_current_cs</text:span>(<text:span text:style-name="T3">SPELL_ENCODING</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">delete</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">afflst</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">ALIAS</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">parse_aliasf</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>**)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>*)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>||<text:span text:style-name="T2"> </text:span>!<text:span text:style-name="T9">aliasflen</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasf</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasf</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasflen</text:span>)</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasflen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasf</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasflen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numaliasf</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">numaliasf</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasflen</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AF&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasf</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasflen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">aliasflen</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>(<text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>)<text:span text:style-name="T5">decode_flags</text:span>(&amp;(<text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">j</text:span>]),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T5">sort</text:span>(<text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">j</text:span>],<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>+<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">aliasflen</text:span>[<text:span text:style-name="T8">j</text:span>]);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">j</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasf</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasflen</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasflen</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">numaliasf</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">is_aliasf</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasf</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">get_aliasf</text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">unsigned</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">short</text:span>**<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">fvec</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">numaliasf</text:span>))<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>*<text:span text:style-name="T8">fvec</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">aliasf</text:span>[<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">aliasflen</text:span>[<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">flag</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">alias</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">index:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="19"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>*<text:span text:style-name="T8">fvec</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morph</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">alias</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">bool</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">parse_aliasm</text:span>(<text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>&amp;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">FileMgr</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">af</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">multiple</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">definitions\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">line</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">atoi</text:span>(<text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>).c_str());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">entry</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">number\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="27"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">char</text:span>**)<text:span text:style-name="T5">malloc</text:span>(<text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">sizeof</text:span>(<text:span text:style-name="T7">char</text:span>*));</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">aliasm</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T8">np</text:span>++;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">line</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">np</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasm</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">missing</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">data\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="21"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P1"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T1">/*</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">now</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">parse</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">numaliasm</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">lines</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">to</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">read</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">in</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remainder</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">*/</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">for</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span><text:span text:style-name="T2"> </text:span>&lt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">numaliasm</text:span>;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">j</text:span>++)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getline</text:span>(<text:span text:style-name="T8">nl</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>mychomp(<text:span text:style-name="T8">nl</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T9">aliasm</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">iter</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">i</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">while</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>())<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">switch</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">i</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">compare</text:span>(<text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">begin</text:span>(),<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;AM&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">2</text:span>)<text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="29"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasm</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">case</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>:<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T1">//</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">add</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">remaining</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">of</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">the</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span>::<text:span text:style-name="T4">const_iterator</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">nl</text:span>.<text:span text:style-name="T5">end</text:span>();</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T4">std</text:span>::<text:span text:style-name="T4">string</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">chunk</text:span>(<text:span text:style-name="T8">start_piece</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">end</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">complexprefixes</text:span>)<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">utf8</text:span>)</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword_utf(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="12"/></text:span><text:span text:style-name="T7">else</text:span></text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="14"/></text:span>reverseword(<text:span text:style-name="T8">chunk</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T9">aliasm</text:span>[<text:span text:style-name="T8">j</text:span>]<text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrdup</text:span>(<text:span text:style-name="T8">chunk</text:span>.<text:span text:style-name="T5">c_str</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="8"/></text:span><text:span text:style-name="T7">default</text:span>:</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="10"/></text:span><text:span text:style-name="T7">break</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span>++<text:span text:style-name="T8">i</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T8">start_piece</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T5">mystrsep</text:span>(<text:span text:style-name="T8">nl</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">iter</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>(!<text:span text:style-name="T9">aliasm</text:span>[<text:span text:style-name="T8">j</text:span>])<text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">numaliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">free</text:span>(<text:span text:style-name="T9">aliasm</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">line</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">table</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">is</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">corrupt\n&quot;</text:span>,</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="23"/></text:span><text:span text:style-name="T8">af</text:span>-&gt;<text:span text:style-name="T5">getlinenum</text:span>());</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="6"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">false</text:span>;</text:p>
   <text:p text:style-name="P3"><text:soft-page-break/><text:span text:style-name="T2"><text:s text:c="4"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span>}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">true</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">is_aliasm</text:span>()<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T9">aliasm</text:span><text:span text:style-name="T2"> </text:span>!=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>);</text:p>
   <text:p text:style-name="P1">}</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T7">char</text:span>*<text:span text:style-name="T2"> </text:span><text:span text:style-name="T4">HashMgr</text:span>::<text:span text:style-name="T6">get_aliasm</text:span>(<text:span text:style-name="T7">int</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span>)<text:span text:style-name="T2"> </text:span><text:span text:style-name="T7">const</text:span><text:span text:style-name="T2"> </text:span>{</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">if</text:span><text:span text:style-name="T2"> </text:span>((<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>&gt;<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">0</text:span>)<text:span text:style-name="T2"> </text:span>&amp;&amp;<text:span text:style-name="T2"> </text:span>(<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>&lt;=<text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">numaliasm</text:span>))</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="4"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T9">aliasm</text:span>[<text:span text:style-name="T8">index</text:span><text:span text:style-name="T2"> </text:span>-<text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">1</text:span>];</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T5">HUNSPELL_WARNING</text:span>(<text:span text:style-name="T3">stderr</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">&quot;error:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">bad</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">morph.</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">alias</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">index:</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T1">%d\n&quot;</text:span>,<text:span text:style-name="T2"> </text:span><text:span text:style-name="T8">index</text:span>);</text:p>
   <text:p text:style-name="P3"><text:span text:style-name="T2"><text:s text:c="2"/></text:span><text:span text:style-name="T7">return</text:span><text:span text:style-name="T2"> </text:span><text:span text:style-name="T3">NULL</text:span>;</text:p>
   <text:p text:style-name="P1">}</text:p>
  </office:text>
 </office:body>
</office:document>